{"version":3,"file":"main/210e4eec5165ed074397.js","mappings":"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","sources":["webpack://main/./src/pages/error-404.tsx","webpack://main/./src/landing-page.tsx","webpack://main/./src/nav.tsx","webpack://main/./src/remote-utils.jsx","webpack://main/./src/theme.ts","webpack://main/./src/pages/verify.tsx","webpack://main/./src/pages/login.tsx","webpack://main/./src/config.ts","webpack://main/./src/pages/register.tsx","webpack://main/./src/pages/confirm.tsx","webpack://main/./src/app.tsx","webpack://main/./src/bootstrap.jsx"],"sourcesContent":["import {\r\n  AccentLink,\r\n  HeadingTertiary,\r\n  Subtitle,\r\n  Title,\r\n} from '@super-rad-poc/design/styles';\r\nimport * as React from 'react';\r\nimport MascotSad from '../images/mascot/mascot_sad.png';\r\nimport { themeGet } from '@styled-system/theme-get';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StyledError = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: ${themeGet('colors.primary_text')};\r\n  color: ${themeGet('colors.light_text')};\r\n`;\r\n\r\nconst StyledLink = styled.span`\r\n  color: ${themeGet('colors.accent')};\r\n  font-size: ${(props) => props.theme.fontSizes[2]};\r\n\r\n  & > a {\r\n    color: ${themeGet('colors.accent')};\r\n    font-size: ${(props) => props.theme.fontSizes[2]};\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      color: ${themeGet('colors.light_text')};\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledTextContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport default function Error404() {\r\n  return (\r\n    <StyledError>\r\n      <Title color=\"#fafafa\">Uh oh! - 404</Title>\r\n      <Subtitle color=\"#fafafa\">Looks like we can't find that page.</Subtitle>\r\n      <StyledTextContent>\r\n        <span>\r\n          Please{' '}\r\n          <StyledLink>\r\n            <Link to=\"/\">Go Home</Link>{' '}\r\n          </StyledLink>\r\n          and try again.\r\n        </span>\r\n        <br />\r\n        <sub>\r\n          If this keeps happening, please{' '}\r\n          <StyledLink>\r\n            <a target={'_blank'} href=\"mailto:support@sociium.io\">\r\n              contect support\r\n            </a>\r\n          </StyledLink>\r\n        </sub>\r\n      </StyledTextContent>\r\n      <div>\r\n        <img src={MascotSad} style={{ width: '10rem' }} alt=\"Sad Mascot\" />\r\n      </div>\r\n    </StyledError>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport Circle from './images/circle.png';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\nimport { Suspense, useCallback, useMemo, useRef } from 'react';\r\nimport { useTexture } from '@react-three/drei';\r\nimport {\r\n  AccentLink,\r\n  ContainerTitle,\r\n  SnackManager,\r\n  Subtitle,\r\n  Title,\r\n} from '@super-rad-poc/design/styles';\r\nimport { LoadingSpinner } from '@super-rad-poc/design/components';\r\nimport MascotHello from './images/mascot/mascot_happy_1.png';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst StyledWave = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  box-sizing: border-box;\r\n  overflow-x: hidden;\r\n  background-color: #000;\r\n`;\r\n\r\nfunction Points() {\r\n  const imgTex = useTexture({\r\n    map: Circle,\r\n  });\r\n  const bufferRef = useRef<any>();\r\n\r\n  let phase = 0;\r\n  let amplitude = 3.5;\r\n  let frequency = 0.002;\r\n\r\n  const graph = useCallback(\r\n    (x: number, z: number) => {\r\n      return Math.sin(frequency * (x ** 2 + z ** 2 + phase)) * amplitude;\r\n    },\r\n    [frequency, amplitude, phase]\r\n  );\r\n\r\n  const count = 500;\r\n  const sep = 3;\r\n  const points = useMemo(() => {\r\n    let positions = [];\r\n\r\n    for (let xi = 0; xi < count; xi++) {\r\n      for (let zi = 0; zi < count; zi++) {\r\n        let x = sep * (xi - count / 2);\r\n        let z = sep * (zi - count / 2);\r\n        let y = graph(x, z);\r\n\r\n        positions.push(x, y, z);\r\n      }\r\n    }\r\n\r\n    return new Float32Array(positions);\r\n  }, [graph]);\r\n\r\n  useFrame(() => {\r\n    phase -= 4;\r\n\r\n    const positions = bufferRef.current?.array;\r\n\r\n    let i = 0;\r\n    for (let xi = 0; xi < count; xi++) {\r\n      for (let zi = 0; zi < count; zi++) {\r\n        let x = sep * (xi - count / 2);\r\n        let z = sep * (zi - count / 2);\r\n\r\n        if (positions) {\r\n          positions[i + 1] = graph(x, z);\r\n        }\r\n        i += 3;\r\n      }\r\n    }\r\n    if (bufferRef.current) bufferRef.current.needsUpdate = true;\r\n  });\r\n\r\n  return (\r\n    <points>\r\n      <bufferGeometry attach=\"geometry\">\r\n        <bufferAttribute\r\n          ref={bufferRef}\r\n          attachObject={['attributes', 'position']}\r\n          count={points.length / 3}\r\n          itemSize={3}\r\n          array={points}\r\n        />\r\n      </bufferGeometry>\r\n\r\n      <pointsMaterial\r\n        attach=\"material\"\r\n        {...imgTex}\r\n        color={0x00aaff}\r\n        size={0.5}\r\n        sizeAttenuation\r\n        transparent={false}\r\n        alphaTest={0.5}\r\n        opacity={1.0}\r\n      />\r\n    </points>\r\n  );\r\n}\r\n\r\nfunction AnimationCanvas() {\r\n  return (\r\n    <Canvas camera={{ position: [100, 15, 0], fov: 65 }}>\r\n      <ambientLight intensity={0.5} />\r\n      <Suspense fallback={null}>\r\n        <Points />\r\n      </Suspense>\r\n    </Canvas>\r\n  );\r\n}\r\nconst Background = () => (\r\n  <Suspense fallback={<LoadingSpinner />}>\r\n    <StyledWave>\r\n      <AnimationCanvas />\r\n    </StyledWave>\r\n  </Suspense>\r\n);\r\n\r\nconst StyledPagecontainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: transparent;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledMascot = styled.img`\r\n  width: 10rem;\r\n`;\r\n\r\nexport const LandingPage = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  return (\r\n    <>\r\n      <SnackManager />\r\n      <Background />\r\n      <StyledPagecontainer>\r\n        <ContainerTitle>\r\n          <Title\r\n            color={'white'}\r\n            style={{ marginBottom: '0', width: '100%', textAlign: 'center' }}\r\n          >\r\n            Welcome\r\n          </Title>\r\n          <Subtitle\r\n            color={'white'}\r\n            style={{ width: '100%', textAlign: 'center' }}\r\n          >\r\n            To Sociium\r\n          </Subtitle>\r\n        </ContainerTitle>\r\n\r\n        <StyledMascot src={MascotHello} alt=\"mascot\" />\r\n\r\n        <AccentLink\r\n          to=\"/login\"\r\n          style={{ width: 'auto', padding: '1.5rem', marginTop: '2rem' }}\r\n        >\r\n          Click here to get started\r\n        </AccentLink>\r\n      </StyledPagecontainer>\r\n    </>\r\n  );\r\n};\r\n","import { useAuth } from '@super-rad-poc/design/components';\r\nimport { useClickedOutside, useWindowSize } from '@super-rad-poc/common/hooks';\r\nimport {\r\n  Nav as StyledNav,\r\n  NavBurger,\r\n  NavButton,\r\n  NavButtons,\r\n  NavEnd,\r\n  NavMain,\r\n  NavMenu,\r\n  NavMenuItem,\r\n  NavStart,\r\n  NavTextPrimary,\r\n  NavTextSecondary,\r\n  NavLink,\r\n} from '@super-rad-poc/design/styles';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useStore } from '@super-rad-poc/common/hooks';\r\nimport { useNavigate } from 'react-router-dom';\r\ntype AuthNavBtnProps = {\r\n  logout: () => void;\r\n};\r\nconst AuthenticatedNavButtons = ({ logout }: AuthNavBtnProps) => {\r\n  return (\r\n    <>\r\n      <NavButton onClick={() => logout()}>\r\n        <span>Logout</span>\r\n      </NavButton>\r\n      <NavButton>\r\n        <Link to=\"/profile\">Profile</Link>\r\n      </NavButton>\r\n    </>\r\n  );\r\n};\r\n\r\ntype UnauthNavProps = {\r\n  loginWithRedirect: () => void;\r\n};\r\nconst UnauthNavButtons = ({ loginWithRedirect }: UnauthNavProps) => {\r\n  return (\r\n    <NavButton>\r\n      <Link to=\"/login\">Login</Link>\r\n    </NavButton>\r\n  );\r\n};\r\n\r\ntype BurgerAuthProps = {\r\n  logout: () => void;\r\n};\r\nconst BurgerAuthButtons = ({ logout }: BurgerAuthProps) => {\r\n  return (\r\n    <>\r\n      <NavMenuItem>\r\n        <Link to=\"/profile\">Profile</Link>\r\n      </NavMenuItem>\r\n      <NavMenuItem>\r\n        <span onClick={() => logout()}>Logout</span>\r\n      </NavMenuItem>\r\n    </>\r\n  );\r\n};\r\n\r\nconst BurgerUnauthButtons = () => {\r\n  return (\r\n    <NavMenuItem>\r\n      <NavLink to=\"/login\">Login</NavLink>\r\n    </NavMenuItem>\r\n  );\r\n};\r\n\r\nexport const Nav = () => {\r\n  const { isAuthenticated, setIsAuthenticated } = useStore();\r\n  const [burgerActive, setBurgerActive] = useState(false);\r\n  const [isBurgerVisible, setIsBurgerVisible] = useState(false);\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n  const windowSize = useWindowSize();\r\n  const { onLogout, token } = useAuth();\r\n  function clickedOutside() {\r\n    setBurgerActive(false);\r\n  }\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    setBurgerActive(false);\r\n  }, [location]);\r\n\r\n  useClickedOutside([menuRef], clickedOutside);\r\n  useEffect(() => {\r\n    if (token) setIsAuthenticated(true);\r\n    else setIsAuthenticated(false);\r\n\r\n    if (!windowSize || !windowSize.width) return;\r\n\r\n    if (windowSize.width > 768) {\r\n      setIsBurgerVisible(false);\r\n      setBurgerActive(false);\r\n    } else {\r\n      setIsBurgerVisible(true);\r\n    }\r\n  }, [windowSize, token]);\r\n\r\n  return (\r\n    <StyledNav ref={menuRef}>\r\n      <NavStart>\r\n        <Link to=\"/\">\r\n          <NavMain>\r\n            <span style={{ cursor: 'pointer' }}>\r\n              <NavTextPrimary>Soci</NavTextPrimary>\r\n              <NavTextSecondary>ium</NavTextSecondary>\r\n            </span>\r\n          </NavMain>\r\n        </Link>\r\n      </NavStart>\r\n      <NavEnd>\r\n        {!isBurgerVisible && (\r\n          <NavButtons>\r\n            <NavButton>\r\n              <Link to={isAuthenticated ? '/home' : '/'}>Home</Link>\r\n            </NavButton>\r\n            {!isAuthenticated ? (\r\n              <UnauthNavButtons loginWithRedirect={() => onLogout(() => {})} />\r\n            ) : (\r\n              <AuthenticatedNavButtons logout={() => onLogout(() => {})} />\r\n            )}\r\n          </NavButtons>\r\n        )}\r\n        {isBurgerVisible && (\r\n          <>\r\n            <NavBurger\r\n              isActive={burgerActive}\r\n              onClicked={() => setBurgerActive(!burgerActive)}\r\n            />\r\n            <NavMenu isActive={burgerActive}>\r\n              <NavMenuItem>\r\n                <Link to={isAuthenticated ? '/home' : '/'}>Home</Link>\r\n              </NavMenuItem>\r\n              {isAuthenticated ? (\r\n                <BurgerAuthButtons logout={() => () => {}} />\r\n              ) : (\r\n                <BurgerUnauthButtons />\r\n              )}\r\n            </NavMenu>\r\n          </>\r\n        )}\r\n      </NavEnd>\r\n    </StyledNav>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CubeSpinner } from '@super-rad-poc/design/styles';\r\nimport { LoadingSpinner } from '@super-rad-poc/design/components';\r\n\r\nconst useDynamicScript = (url) => {\r\n  return new Promise((resolve) => {\r\n    if (!url) {\r\n      return;\r\n    }\r\n\r\n    const element = document.createElement('script');\r\n\r\n    element.src = url;\r\n    element.type = 'text/javascript';\r\n    element.async = true;\r\n\r\n    element.onload = () => {\r\n      resolve(true);\r\n    };\r\n\r\n    element.onerror = () => {\r\n      resolve(false);\r\n    };\r\n\r\n    document.head.appendChild(element);\r\n  });\r\n};\r\n\r\n/*\r\nGets the remote from the window object.  Solution obtained here:\r\nhttps://github.com/module-federation/module-federation-examples/blob/master/dynamic-system-host/app1/src/App.js\r\n */\r\nconst initializedRemoteContainer = async (scope, module = '.') => {\r\n  await __webpack_init_sharing__('default');\r\n\r\n  const container = window[scope];\r\n\r\n  if (!container) {\r\n    console.log(NO_REMOTE_ERROR);\r\n\r\n    return;\r\n  }\r\n\r\n  await container.init(__webpack_share_scopes__.default);\r\n\r\n  const factory = await window[scope].get(module);\r\n  const Module = factory();\r\n\r\n  return Module;\r\n};\r\n\r\nconst attachRemote = async (remote) => {\r\n  /*\r\n        dev: http://localhost:3001/application-1/remoteEntry.js\r\n        production: http://localhost:3000/application-1/remoteEntry.js\r\n    */\r\n  const entry =\r\n    MODE === 'development'\r\n      ? `${REMOTE_INFO[remote]}/${remote}`\r\n      : `${window.location.port}/${remote}`;\r\n  const url = `${window.location.protocol}//${window.location.hostname}`;\r\n\r\n  await useDynamicScript(`${url}:${entry}/remoteEntry.js`);\r\n  const attachedRemote = await initializedRemoteContainer(remote);\r\n\r\n  return attachedRemote;\r\n};\r\n\r\nconst AttachedApp = ({ remoteName, moduleName }) => {\r\n  const [app, setApp] = useState(\r\n    <>\r\n      <p>Loading...</p>\r\n    </>\r\n  );\r\n\r\n  useEffect(() => {\r\n    attachRemote([remoteName]).then((module) => {\r\n      setApp(module[moduleName]);\r\n    });\r\n  }, [remoteName]);\r\n\r\n  return app;\r\n};\r\n\r\nconst MicroApp = ({ remoteName, moduleName }) => (\r\n  <AttachedApp remoteName={remoteName} moduleName={moduleName} />\r\n);\r\n\r\nexport { MicroApp };\r\n","import { BaseTheme } from '@super-rad-poc/design/styles';\r\n\r\nexport const Theme = {\r\n  ...BaseTheme,\r\n  colors: {\r\n    ...BaseTheme.colors,\r\n  },\r\n};\r\n\r\n//export default Theme;\r\n","import themeGet from '@styled-system/theme-get';\nimport { useStore } from '@super-rad-poc/common/hooks';\nimport { LoadingSpinner } from '@super-rad-poc/design/components';\nimport { Title } from '@super-rad-poc/design/styles';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport MascotHello from '../images/mascot/mascot_happy_1.png';\n\nconst StyledVerify = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: ${themeGet('colors.primary_text')};\n  color: ${themeGet('colors.light_text')};\n`;\n\nconst StyledTextContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 2rem;\n`;\n\nexport const VerificationPage = () => {\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!token) {\n      setError('No token provided');\n      return;\n    }\n    const verify = async () => {\n      try {\n        await axios.post('http://localhost:5002/verify/', { token });\n        setLoading(false);\n\n        setTimeout(() => {\n          navigate('/login');\n        }, 5000);\n      } catch (err: any) {\n        setError(err);\n      }\n    };\n\n    verify();\n  }, [token]);\n\n  return (\n    <div>\n      {loading ? (\n        <LoadingSpinner />\n      ) : (\n        <div>\n          {error ? (\n            <div>\n              <h1>Error</h1>\n              <p>{error}</p>\n            </div>\n          ) : (\n            <StyledVerify>\n              <Title color=\"#fafafa\">Verification Successful!</Title>\n              <p color=\"#fafafa\">\n                In order to keep everyone safe, we require that you verify your\n                email before you can log in.\n              </p>\n              <StyledTextContent>\n                <p color=\"#fafafa\">\n                  Please check your email for a verification link.\n                </p>\n                <p>\n                  You will be automatically redirected to the login page in a\n                  couple seconds.{' '}\n                </p>\n                <p>\n                  {' '}\n                  Otherwise, you can also <Link to=\"/login\">click here</Link>\n                </p>\n              </StyledTextContent>\n              <div>\n                <img\n                  src={MascotHello}\n                  style={{ width: '10rem' }}\n                  alt=\"Sad Mascot\"\n                />\n              </div>\n            </StyledVerify>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport MascotFace from '../images/mascot/mascot_face.png';\nimport MascotHappy from '../images/mascot/mascot_hello.png';\nimport { useNavigate } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { plainToClass } from 'class-transformer';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  CubeSpinner,\n  FormInput,\n  FormGroup,\n  FormLabel,\n  SubmitButton,\n  Snackbar,\n  Link,\n  Title,\n  Subtitle,\n} from '@super-rad-poc/design/styles';\nimport { useAuth } from '@super-rad-poc/design/components';\nimport { useSearchParams } from 'react-router-dom';\nimport { useStore } from '@super-rad-poc/common/hooks';\n\nimport { User as IUser } from '@prisma/client/users';\nexport class User implements IUser {\n  constructor(\n    public id: string,\n    public email: string,\n    public password: string,\n    public firstName: string,\n    public lastName: string,\n    public verification: string,\n    public friendRequestIds: string[],\n    public createdAt: Date,\n    public updatedAt: Date,\n    public isActive: boolean,\n    public isBanned: boolean,\n    public verified: boolean,\n    public banDuration: number,\n    public middle_name: string,\n    public nickname: string,\n    public preferred_username: string,\n    public profile: string,\n    public picture: string,\n    public website: string,\n    public birthdate: Date,\n    public gender: string,\n    public zoneInfo: string,\n    public locale: string,\n    public phone_number: string,\n    public phone_number_verified: boolean\n  ) {}\n}\ninterface JwtPayload {\n  aud: string;\n  data: Partial<User>;\n  exp: number;\n  iat: number;\n  iss: string;\n  kid: string;\n  scope: string;\n  sub: string;\n}\n\nconst StyledAuth = styled.div`\n  padding: 4rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.3);\n`;\n\nexport const Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const { onLogin } = useAuth();\n  const [authenticated, setAuthenticated] = useState(false);\n  const { setToken, setUser } = useStore();\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    onLogin(\n      {\n        email,\n        password,\n      },\n      (jwt?: string, e?: Error) => {\n        if (e) {\n          setError(e.message);\n        }\n        if (jwt) {\n          setLoading(false);\n          setAuthenticated(true);\n          setToken(jwt);\n\n          const decoded = jwt_decode(jwt) as JwtPayload;\n          setUser(plainToClass(User, decoded.data));\n          console.log(jwt);\n\n          setTimeout(() => {\n            navigate('/home');\n          }, 5000);\n        }\n      }\n    );\n  };\n\n  return (\n    <StyledAuth>\n      {loading && <CubeSpinner />}\n      {authenticated ? (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <div>\n            <Title>Success!</Title>\n            <Subtitle>You are now logged in.</Subtitle>\n            <div>\n              <p>We are redirecting you now. If it takes to long, you can </p>\n              <Link to={'/'}>click here</Link>\n            </div>\n          </div>\n          <div style={{ flex: '1 1 auto' }}>\n            <img src={MascotHappy} style={{ width: '8rem' }} alt=\"mascot\" />\n          </div>\n        </div>\n      ) : (\n        <Card>\n          <CardHeader\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <img\n              style={{\n                width: '8rem',\n                position: 'absolute',\n                top: '-7rem',\n                left: '5rem',\n              }}\n              src={MascotFace}\n              alt=\"Mascot Face\"\n            />\n            <CardTitle>Login</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <form\n              onSubmit={(e) => handleSubmit(e)}\n              style={{ marginBottom: '.5rem' }}\n            >\n              <FormGroup>\n                <FormInput\n                  style={{\n                    width: 'auto',\n                  }}\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  autoComplete=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n                <FormLabel htmlFor=\"email\">Email</FormLabel>\n              </FormGroup>\n              <FormGroup>\n                <FormInput\n                  style={{\n                    width: 'auto',\n                  }}\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <FormLabel htmlFor=\"password\">Password</FormLabel>\n              </FormGroup>\n              <SubmitButton\n                style={{\n                  width: '100%',\n                }}\n                type=\"submit\"\n                disabled={loading}\n              />\n            </form>\n\n            <span\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <pre>Need an account? </pre>&nbsp;\n              <Link to=\"/register\">Register</Link>\n            </span>\n          </CardBody>\n        </Card>\n      )}\n      {error && <Snackbar message={error} />}\n    </StyledAuth>\n  );\n};\n","const Auth0  = {\n    domain: 'https://auth.sociium.io',\n    redirectUri: 'http://localhost:3002/callback',\n    clientId: 'TCWdKhoQez2W334EooQI1VCRvxBWRx86',\n    audience: 'https://api.sociium.io',\n}\n\nconst API = {\n    AUTH_ENDPOINT: `http://localhost:5002/authorize`,\n    REGISTER_ENDPOINT: `http://localhost:5002/register`\n}\n\nexport const Config = {\n    Auth0,\n    API,\n}","import { useStore } from '@super-rad-poc/common/hooks';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Config } from '../config';\nimport MascotFace from '../images/mascot/mascot_face.png';\nimport * as joi from 'joi';\n\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  CubeSpinner,\n  FormInput,\n  FormGroup,\n  FormLabel,\n  SubmitButton,\n  Snackbar,\n  Link,\n} from '@super-rad-poc/design/styles';\nimport themeGet from '@styled-system/theme-get';\nimport { CheckIcon } from '@super-rad-poc/desgn/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst UserValidationSchema = joi.object({\n  email: joi\n    .string()\n    .email({ tlds: { allow: false } })\n    .required(),\n  password: joi\n    .string()\n    .min(8)\n    ?.message('Password must be at least 8 characters long')\n    .pattern(/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/)\n    .message('Password must contain at least one special character')\n    .pattern(/(?=.*[a-z])(?=.*[A-Z])/)\n    .message(\n      'Password must contain at least one lowercase and one uppercase character'\n    )\n    .required(),\n  firstName: joi.string().required(),\n  lastName: joi.string().required(),\n});\n\nconst StyledAuth = styled.div`\n  position: relative;\n  padding: 4rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.3);\n`;\n\nconst StyledRegisterForm = styled.form`\n  display: grid;\n  grid-template-columns: 1fr minmax(25px, 50px) 1fr;\n  gap: 8px;\n  grid-auto-rows: minmax(3rem, auto);\n`;\n\nconst StyledInfoContainer = styled.div`\n  position: relative;\n  right: -40px;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  padding: 0 8px;\n  border-left: 1px solid #ccc;\n\n  span:not(:last-child) {\n    margin-bottom: 3rem;\n  }\n`;\n\nconst StyledInfoItem = styled.span`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n`;\n\nexport const Register = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { token, setToken } = useStore();\n  const {} = useNavigate();\n\n  //Validation\n  const [passIsEightChars, setPassIsEightChars] = useState(false);\n  const [passIsUpperCase, setPassIsUpperCase] = useState(false);\n  const [passIsLowerCase, setPassIsLowerCase] = useState(false);\n  const [passIsNumber, setPassIsNumber] = useState(false);\n  const [passIsSpecialChar, setPassIsSpecialChar] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [confirmMatches, setConfirmMatches] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (password.length >= 8) {\n      setPassIsEightChars(true);\n    } else {\n      setPassIsEightChars(false);\n    }\n\n    if (password.match(/[A-Z]/)) {\n      setPassIsUpperCase(true);\n    } else {\n      setPassIsUpperCase(false);\n    }\n\n    if (password.match(/[a-z]/)) {\n      setPassIsLowerCase(true);\n    } else {\n      setPassIsLowerCase(false);\n    }\n\n    if (password.match(/[0-9]/)) {\n      setPassIsNumber(true);\n    } else {\n      setPassIsNumber(false);\n    }\n\n    if (password.match(/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/)) {\n      setPassIsSpecialChar(true);\n    } else {\n      setPassIsSpecialChar(false);\n    }\n\n    if (password.length > 0 && password === confirmPassword) {\n      setConfirmMatches(true);\n    } else {\n      setConfirmMatches(false);\n    }\n\n    if (\n      passIsEightChars &&\n      passIsUpperCase &&\n      passIsLowerCase &&\n      passIsNumber &&\n      passIsSpecialChar &&\n      confirmMatches\n    ) {\n      setPasswordValid(true);\n    } else {\n      setPasswordValid(false);\n    }\n  }, [email, password, firstName, lastName, confirmPassword]);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const { error, value } = UserValidationSchema.validate({\n      email,\n      password,\n      firstName,\n      lastName,\n    });\n    if (error) {\n      setError(error.message);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(`${Config.API.REGISTER_ENDPOINT}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          confirmPassword,\n          firstName,\n          lastName,\n        }),\n      });\n      const json = await response.json();\n      if (json.error) {\n        setError(json.error);\n      } else {\n        setError('');\n        navigate('/confirm');\n      }\n    } catch (e) {\n      setError('Something went wrong');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <StyledAuth>\n      <Card\n        style={{\n          marginTop: '2rem',\n        }}\n      >\n        <CardHeader\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <img\n            style={{\n              width: '8rem',\n              position: 'absolute',\n              top: '-5rem',\n              left: '2rem',\n            }}\n            src={MascotFace}\n            alt=\"Mascot Face\"\n          />\n          <CardTitle>Register</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'center',\n              marginBottom: '1rem',\n              width: '100%',\n            }}\n          >\n            <StyledRegisterForm onSubmit={handleSubmit}>\n              <FormGroup\n                style={{\n                  gridColumn: '1',\n                  gridRow: '1',\n                  width: '100%',\n                }}\n              >\n                <FormInput\n                  type=\"text\"\n                  autoComplete=\"firstName\"\n                  required\n                  className=\"form-control\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n                <FormLabel htmlFor=\"firstName\">First Name</FormLabel>\n              </FormGroup>\n              <span></span>\n              <FormGroup\n                style={{\n                  gridColumn: '3',\n                  gridRow: '1',\n                  width: '100%',\n                }}\n              >\n                <FormInput\n                  type=\"text\"\n                  required\n                  autoComplete=\"lastName\"\n                  className=\"form-control\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n                <FormLabel htmlFor=\"lastName\">Last Name</FormLabel>\n              </FormGroup>\n\n              <FormGroup\n                style={{\n                  gridColumn: '1 / -1',\n                  gridRow: '2',\n                  width: '100%',\n                }}\n              >\n                <FormInput\n                  type=\"email\"\n                  required\n                  autoComplete=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  aria-required\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n                <FormLabel htmlFor=\"email\">Email</FormLabel>\n              </FormGroup>\n\n              <FormGroup\n                style={{\n                  gridColumn: '1 /-1',\n                  gridRow: '3',\n                  width: '100%',\n                }}\n              >\n                <FormInput\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <FormLabel htmlFor=\"password\">Password</FormLabel>\n              </FormGroup>\n              <span></span>\n              <FormGroup\n                style={{\n                  gridColumn: '1 / -1',\n                  gridRow: '4',\n                  width: '100%',\n                }}\n              >\n                <FormInput\n                  type=\"password\"\n                  required\n                  autoComplete=\"new-password\"\n                  className=\"form-control\"\n                  name=\"confirmPassword\"\n                  id=\"confirmPassword\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n                <FormLabel htmlFor=\"password\">Confirm Password</FormLabel>\n              </FormGroup>\n\n              <SubmitButton\n                type=\"submit\"\n                style={{ width: '100%', gridColumn: '1 / -1', gridRow: '5' }}\n                disabled={loading}\n              />\n              <div\n                style={{\n                  gridColumn: '1 / -1',\n                  gridRow: '6',\n                  display: 'flex',\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}\n              >\n                <pre>Already have an account?</pre>&nbsp;\n                <Link to=\"/login\">Login</Link>\n              </div>\n            </StyledRegisterForm>\n            <StyledInfoContainer>\n              <StyledInfoItem>\n                <CheckIcon\n                  stroke={\n                    passwordValid\n                      ? '#00C853'\n                      : passIsUpperCase && passIsLowerCase\n                      ? '#00C853'\n                      : '#D50000'\n                  }\n                  strokeWidth={2}\n                  style={{\n                    width: '16px',\n                    marginRight: '2px',\n                    marginTop: '2px',\n                  }}\n                />\n                <sub>\n                  Password must contain both uppercase and lowercase characters\n                </sub>\n              </StyledInfoItem>\n\n              <StyledInfoItem>\n                <CheckIcon\n                  stroke={\n                    passwordValid\n                      ? '#00C853'\n                      : passIsNumber\n                      ? '#00C853'\n                      : '#D50000'\n                  }\n                  strokeWidth={2}\n                  style={{\n                    width: '16px',\n                    marginRight: '2px',\n                    marginTop: '2px',\n                  }}\n                />\n                <sub>Password must contain at least one number</sub>\n              </StyledInfoItem>\n\n              <StyledInfoItem>\n                <CheckIcon\n                  stroke={\n                    passwordValid\n                      ? '#00C853'\n                      : passIsSpecialChar\n                      ? '#00C853'\n                      : '#D50000'\n                  }\n                  strokeWidth={2}\n                  style={{\n                    width: '16px',\n                    marginRight: '2px',\n                    marginTop: '2px',\n                  }}\n                />\n                <sub>Password must contain at least one special character</sub>\n              </StyledInfoItem>\n              <StyledInfoItem>\n                <CheckIcon\n                  stroke={\n                    passwordValid\n                      ? '#00C853'\n                      : passIsEightChars\n                      ? '#00C853'\n                      : '#D50000'\n                  }\n                  strokeWidth={2}\n                  style={{\n                    width: '16px',\n                    marginRight: '2px',\n                    marginTop: '2px',\n                  }}\n                />\n                <sub>Password must be at least 8 characters long</sub>\n              </StyledInfoItem>\n              <StyledInfoItem>\n                <CheckIcon\n                  stroke={\n                    passwordValid\n                      ? '#00C853'\n                      : confirmMatches\n                      ? '#00C853'\n                      : '#D50000'\n                  }\n                  strokeWidth={2}\n                  style={{\n                    width: '16px',\n                    marginRight: '2px',\n                    marginTop: '2px',\n                  }}\n                />\n                <sub>Confirm Password must match Password</sub>\n              </StyledInfoItem>\n            </StyledInfoContainer>\n          </div>\n        </CardBody>\n      </Card>\n      {loading && <CubeSpinner />}\n      {error && <Snackbar message={error} />}\n    </StyledAuth>\n  );\n};\n","import {\n  AccentLink,\n  HeadingTertiary,\n  Subtitle,\n  Title,\n} from '@super-rad-poc/design/styles';\nimport * as React from 'react';\nimport { Link } from '@super-rad-poc/design/styles';\nimport MascotExplain from '../images/mascot/mascot_explain.png';\nimport { themeGet } from '@styled-system/theme-get';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\n\nconst StyledConfirm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: ${themeGet('colors.primary_text')};\n  color: ${themeGet('colors.light_text')};\n`;\n\nconst StyledLink = styled.span`\n  color: ${themeGet('colors.accent')};\n  font-size: ${(props) => props.theme.fontSizes[2]};\n\n  & > a {\n    color: ${themeGet('colors.accent')};\n    font-size: ${(props) => props.theme.fontSizes[2]};\n    text-decoration: none;\n\n    &:hover {\n      color: ${themeGet('colors.light_text')};\n    }\n  }\n`;\n\nconst StyledTextContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 2rem;\n`;\n\nexport default function Confirm() {\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      navigate('/');\n    }, 5000);\n  });\n\n  return (\n    <StyledConfirm>\n      <Title color=\"#fafafa\">Thanks for signing up!</Title>\n      <p color=\"#fafafa\">\n        In order to keep everyone safe, we require that you verify your email\n        before you can log in.\n      </p>\n      <StyledTextContent>\n        <p color=\"#fafafa\">Please check your email for a verification link.</p>\n        <p>\n          You will be automatically redirected to the home page in a couple\n          seconds.{' '}\n        </p>\n        <p>\n          {' '}\n          Otherwise, you can also <Link to=\"/\">click here</Link>\n        </p>\n      </StyledTextContent>\n      <div>\n        <img src={MascotExplain} style={{ width: '10rem' }} alt=\"Sad Mascot\" />\n      </div>\n    </StyledConfirm>\n  );\n}\n","import {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  InMemoryCache,\n} from '@apollo/client';\nimport { CustomThemeProvider } from '@super-rad-poc/design/styles';\nimport { PropsWithChildren, Suspense, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  AuthProvider,\n  LoadingSpinner,\n  ProtectedRoute,\n  SocketIOProvider,\n  useAuth,\n} from '@super-rad-poc/design/components';\nimport Error404 from './pages/error-404';\nimport { LandingPage } from './landing-page';\nimport { Nav } from './nav';\nimport { MicroApp } from './remote-utils';\nimport { Theme } from './theme';\nimport { Route, Routes } from 'react-router-dom';\nimport { Config } from './config';\nimport { setContext } from '@apollo/link-context';\nimport { VerificationPage } from './pages/verify';\nimport { Login } from './pages/login';\nimport { Register } from './pages/register';\nimport Confirm from './pages/confirm';\nimport { useStore } from '@super-rad-poc/common/hooks';\n\ntype Props = {};\n\nconst AuthorizedApolloProvider = ({ children }: PropsWithChildren<Props>) => {\n  const { token } = useAuth();\n  const httpLink = createHttpLink({\n    uri: 'http://localhost:3333/graphql',\n  });\n  const authLink = setContext((_, { headers }) => {\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : null,\n      },\n    };\n  });\n  const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n    connectToDevTools: true,\n  });\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n\nconst Content = styled.div`\n  //overflow: hidden;\n`;\n\nexport const App = () => {\n  const { isAuthenticated } = useStore();\n\n  return (\n    <AuthProvider>\n      <CustomThemeProvider theme={Theme}>\n        <AuthorizedApolloProvider>\n          <Suspense fallback={<LoadingSpinner />}>\n            <Nav />\n            <Content>\n              <Routes>\n                <Route path=\"/\" element={<LandingPage />} />\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/register\" element={<Register />} />\n                <Route path=\"/verify\" element={<VerificationPage />} />\n                <Route path=\"/confirm\" element={<Confirm />} />\n                <Route\n                  path=\"/home\"\n                  element={\n                    <ProtectedRoute\n                      isAuthenticated={isAuthenticated}\n                      outlet={<MicroApp remoteName=\"home\" moduleName=\"Home\" />}\n                    />\n                  }\n                />\n                <Route\n                  path=\"/profile\"\n                  element={\n                    <ProtectedRoute\n                      isAuthenticated={isAuthenticated}\n                      outlet={\n                        <MicroApp remoteName=\"profile\" moduleName=\"Profile\" />\n                      }\n                    />\n                  }\n                />\n                <Route path=\"*\" element={<Error404 />} />\n              </Routes>\n              <MicroApp remoteName=\"messages\" moduleName=\"Messages\" />\n            </Content>\n          </Suspense>\n        </AuthorizedApolloProvider>\n      </CustomThemeProvider>\n    </AuthProvider>\n  );\n};\n","import * as ReactDOM from 'react-dom';\r\nimport { App } from './app';\r\nimport React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"names":["StyledError","themeGet","StyledLink","props","theme","fontSizes","StyledTextContent","Error404","Title","color","Subtitle","to","target","href","src","style","width","alt","StyledWave","Points","imgTex","useTexture","map","bufferRef","useRef","phase","graph","useCallback","x","z","Math","sin","count","points","useMemo","positions","xi","zi","y","push","Float32Array","current","array","i","needsUpdate","attach","ref","attachObject","length","itemSize","size","sizeAttenuation","transparent","alphaTest","opacity","AnimationCanvas","camera","position","fov","intensity","Suspense","fallback","Background","LoadingSpinner","StyledPagecontainer","StyledMascot","LandingPage","searchParams","setSearchParams","SnackManager","ContainerTitle","marginBottom","textAlign","AccentLink","padding","marginTop","AuthenticatedNavButtons","logout","NavButton","onClick","UnauthNavButtons","loginWithRedirect","BurgerAuthButtons","NavMenuItem","BurgerUnauthButtons","NavLink","Nav","isAuthenticated","setIsAuthenticated","useStore","burgerActive","setBurgerActive","useState","isBurgerVisible","setIsBurgerVisible","menuRef","windowSize","useWindowSize","onLogout","token","useAuth","location","useEffect","useClickedOutside","NavStart","NavMain","cursor","NavTextPrimary","NavTextSecondary","NavEnd","NavButtons","NavBurger","isActive","onClicked","NavMenu","AttachedApp","remoteName","moduleName","app","setApp","async","entry","window","port","remote","url","protocol","hostname","Promise","resolve","element","document","createElement","type","onload","onerror","head","appendChild","useDynamicScript","scope","module","__webpack_init_sharing__","container","init","__webpack_share_scopes__","default","get","console","log","NO_REMOTE_ERROR","initializedRemoteContainer","attachRemote","then","MicroApp","Theme","BaseTheme","colors","StyledVerify","VerificationPage","loading","setLoading","navigate","error","setError","setTimeout","err","User","constructor","id","email","password","firstName","lastName","verification","friendRequestIds","createdAt","updatedAt","isBanned","verified","banDuration","middle_name","nickname","preferred_username","profile","picture","website","birthdate","gender","zoneInfo","locale","phone_number","phone_number_verified","StyledAuth","Login","setEmail","setPassword","onLogin","authenticated","setAuthenticated","setToken","setUser","CubeSpinner","display","justifyContent","alignItems","Link","flex","Card","CardHeader","flexDirection","top","left","CardTitle","CardBody","onSubmit","e","preventDefault","jwt","message","decoded","data","handleSubmit","FormGroup","FormInput","className","autoComplete","placeholder","value","onChange","FormLabel","htmlFor","SubmitButton","disabled","Snackbar","Config","UserValidationSchema","tlds","allow","required","min","pattern","StyledRegisterForm","StyledInfoContainer","StyledInfoItem","Register","confirmPassword","setConfirmPassword","setFirstName","setLastName","passIsEightChars","setPassIsEightChars","passIsUpperCase","setPassIsUpperCase","passIsLowerCase","setPassIsLowerCase","passIsNumber","setPassIsNumber","passIsSpecialChar","setPassIsSpecialChar","passwordValid","setPasswordValid","confirmMatches","setConfirmMatches","match","validate","response","fetch","method","headers","body","JSON","stringify","json","gridColumn","gridRow","name","CheckIcon","stroke","strokeWidth","marginRight","StyledConfirm","Confirm","AuthorizedApolloProvider","children","httpLink","createHttpLink","uri","authLink","_","authorization","client","ApolloClient","link","concat","cache","connectToDevTools","ApolloProvider","Content","App","AuthProvider","CustomThemeProvider","path","ProtectedRoute","outlet","ReactDOM","getElementById"],"sourceRoot":""}