{"version":3,"file":"main/f58ea4f0242a3bc82fde.js","mappings":"yhBAEO,SAASA,EACdC,EACAC,EACAC,IAEA,IAAAC,YAAU,KACR,SAASC,EAAmBC,GAC1BL,EAAIM,SAASC,KAETA,EAAEC,SACDD,EAAEC,QAAQC,SAASJ,EAAMK,UACzBR,MAAAA,OAAM,EAANA,EAAQS,SAASJ,KAElBN,OAON,OAFAW,SAASC,iBAAiB,YAAaT,GAEhC,KACLQ,SAASE,oBAAoB,YAAaV,MAE3C,CAACJ,EAAKC,EAAUC,IClBd,SAASa,IACd,MAAOC,EAAYC,IAAiB,IAAAC,UAAsB,CACxDC,WAAOC,EACPC,YAAQD,IAiBV,OAdA,IAAAjB,YAAU,KACR,SAASmB,IACPL,EAAc,CACZE,MAAOI,OAAOC,WACdH,OAAQE,OAAOE,cAOnB,OAHAF,OAAOV,iBAAiB,SAAUS,GAClCA,IAEO,IAAMC,OAAOT,oBAAoB,SAAUQ,KACjD,IAEIN,ECzBF,SAASU,IACd,MAAOC,EAAYC,IAAiB,IAAAV,UAAS,IACtCW,EAAQC,IAAa,IAAAZ,UAAS,IAC9Ba,EAAOC,IAAY,IAAAd,UAAS,GAEnC,IAAIe,EAAa,KAsBjB,OApBA,IAAA9B,YAAU,KACR,MAAM+B,EAAe,KACfD,GACFE,aAAaF,GAEfH,EAAUP,OAAOa,SAEjBH,EAAQI,YAAW,KACjBL,EAASL,EAAaE,GACtBD,EAAcC,KACb,MAKL,OAFAN,OAAOV,iBAAiB,SAAUqB,GAE3B,KACLX,OAAOT,oBAAoB,SAAUoB,MAEtC,CAACL,EAAQE,IAEL,CAACF,EAAQE,G,6GCNX,MAAMO,GAAW,QACtB,SAAS,CAACC,EAAKC,KAAQ,CACrBC,iBAAiB,EACjBC,WAAOtB,EACPuB,UAAMvB,EACNwB,cAAe,GAEfC,mBAAqBJ,IACnBF,GAAKO,GAAW,OAAD,wBAAMA,GAAK,CAAEL,gBAAAA,OAG9BM,SAAWL,IACTH,GAAKO,GAAW,OAAD,wBAAMA,GAAK,CAAEJ,MAAAA,OAG9BM,QAAUL,IACRJ,GAAKO,GAAW,OAAD,wBAAMA,GAAK,CAAEH,KAAAA,OAG9BM,iBAAmBL,IACjBL,GAAKO,GAAW,OAAD,wBAAMA,GAAK,CAAEF,cAAAA,OAG9BM,gBAAkBC,IAChBZ,GAAKO,GAAW,OAAD,wBACVA,GAAK,CACRF,cAAe,IAAIE,EAAMF,cAAeO,QAG5CC,mBAAqBC,IACnBd,GAAKO,GAAW,OAAD,wBACVA,GAAK,CACRF,cAAeE,EAAMF,cAAcU,QAChCH,GAAiBA,EAAaE,KAAOA,c,uECrDzC,MAAME,EAAyB,CACpCC,EACAC,KAGO,IAAAC,WAAU,CACfC,IAAKH,GAAW,wBAChBC,UAAWA,GAAa,GAIxBG,SAAS,I,qECXb,IAAIC,EACG,MAAMC,EAAkBC,IAC7BF,GAAS,IAAAG,IAAG,kCACZC,QAAQC,IAAI,yBACRL,GAAUE,EAAKI,MAAMN,EAAOO,KAAK,OAAQL,GACtCF,GAGIQ,EAAmB,KAC9BJ,QAAQC,IAAI,4BACRL,GAAQA,EAAOS,cAGRC,EACXC,IAEKX,IAELA,EAAOY,GAAG,QAASV,IACjBE,QAAQC,IAAI,iCAAkCH,EAAKW,SAC5CF,EAAG,KAAMT,OAGX,GAGIY,EAAeZ,IACtBF,GAAQA,EAAOO,KAAK,OAAQL,IAGrBa,EAAmBb,IAC1BF,GAAQA,EAAOO,KAAK,cAAeL,IAG5Bc,EAAmBd,IAC1BF,GAAQA,EAAOO,KAAK,cAAeL,IAG5Be,EAAef,IACtBF,GAAQA,EAAOO,KAAK,SAAUL","sources":["webpack://main/../../../libs/common/hooks/src/lib/use-clicked-outside.tsx","webpack://main/../../../libs/common/hooks/src/lib/use-window-size.tsx","webpack://main/../../../libs/common/hooks/src/lib/use-scroll.tsx","webpack://main/../../../libs/common/hooks/src/lib/store.tsx","webpack://main/../../../libs/common/hooks/src/lib/authenticated-socket.tsx","webpack://main/../../../libs/common/hooks/src/lib/messages.tsx"],"sourcesContent":["import { RefObject, useEffect } from 'react';\r\n\r\nexport function useClickedOutside(\r\n  ref: RefObject<HTMLElement>[],\r\n  callback: () => void,\r\n  ignore?: RefObject<HTMLElement>[]\r\n) {\r\n  useEffect(() => {\r\n    function handleClickOutside(event: any) {\r\n      ref.forEach((r) => {\r\n        if (\r\n          r.current &&\r\n          !r.current.contains(event.target) &&\r\n          !ignore?.includes(r)\r\n        ) {\r\n          callback();\r\n        }\r\n      });\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [ref, callback, ignore]);\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\ninterface WindowState {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState<WindowState>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport function useScroll() {\r\n  const [lastScroll, setLastScroll] = useState(0);\r\n  const [scroll, setScroll] = useState(0);\r\n  const [delta, setDelta] = useState(0);\r\n\r\n  let timer: any = null;\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n      setScroll(window.scrollY);\r\n\r\n      timer = setTimeout(() => {\r\n        setDelta(lastScroll - scroll);\r\n        setLastScroll(scroll);\r\n      }, 200);\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [scroll, delta]);\r\n\r\n  return [scroll, delta];\r\n}\r\n","import { User } from '@prisma/client/users';\r\nimport {\r\n  SnackbarNotification,\r\n  SnackbarProps,\r\n} from '@super-rad-poc/common/models';\r\nimport create from 'zustand';\r\nimport { devtools } from 'zustand/middleware';\r\n\r\ninterface AuthState {\r\n  isAuthenticated: boolean;\r\n  token: string | undefined;\r\n  user: User | undefined;\r\n  setIsAuthenticated(auth: boolean): void;\r\n  setToken(token: string | undefined): void;\r\n  setUser(user: User | undefined): void;\r\n}\r\n\r\ninterface NotificationState {\r\n  notifications: SnackbarNotification[];\r\n  addNotification: (notification: SnackbarProps) => void;\r\n  removeNotification: (id: string) => void;\r\n}\r\n\r\nexport const useStore = create<AuthState & NotificationState>(\r\n  devtools((set, get) => ({\r\n    isAuthenticated: false,\r\n    token: undefined,\r\n    user: undefined,\r\n    notifications: [],\r\n\r\n    setIsAuthenticated: (isAuthenticated: boolean) => {\r\n      set((state) => ({ ...state, isAuthenticated }));\r\n    },\r\n\r\n    setToken: (token: string | undefined) => {\r\n      set((state) => ({ ...state, token }));\r\n    },\r\n\r\n    setUser: (user: User | undefined) => {\r\n      set((state) => ({ ...state, user }));\r\n    },\r\n\r\n    setNotifications: (notifications: SnackbarNotification[]) => {\r\n      set((state) => ({ ...state, notifications }));\r\n    },\r\n\r\n    addNotification: (notification: SnackbarProps) => {\r\n      set((state) => ({\r\n        ...state,\r\n        notifications: [...state.notifications, notification],\r\n      }));\r\n    },\r\n    removeNotification: (id: string) => {\r\n      set((state) => ({\r\n        ...state,\r\n        notifications: state.notifications.filter(\r\n          (notification) => notification.id !== id\r\n        ),\r\n      }));\r\n    },\r\n  }))\r\n);\r\n","import { useStore } from './store';\nimport { useSocket } from 'socket.io-react-hook';\n\nexport const useAuthenticatedSocket = (\n  enpoint?: string,\n  namespace?: string\n) => {\n  // const { token } = useStore();\n  return useSocket({\n    url: enpoint || 'http://localhost:5003',\n    namespace: namespace || '',\n    // extraHeaders: {\n    //   Authorization: `Bearer ${token}`,\n    // },\n    enabled: true,\n  });\n};\n","import { ChatMessage, RoomJoinRequest } from '@super-rad-poc/common/models';\nimport { io, Socket } from 'socket.io-client';\n\nlet socket: Socket;\nexport const initiateSocket = (data: RoomJoinRequest) => {\n  socket = io('http://localhost:5003/messages');\n  console.log('Connecting socket....');\n  if (socket && data.room) socket.emit('join', data);\n  return socket;\n};\n\nexport const disconnectSocket = () => {\n  console.log('Disconnecting socket....');\n  if (socket) socket.disconnect();\n};\n\nexport const subscribetoChat = (\n  cb: (err: Error | null, msg: ChatMessage) => void\n) => {\n  if (!socket) return true;\n\n  socket.on('chat', (data: ChatMessage) => {\n    console.log('Received message from server: ', data.message);\n    return cb(null, data);\n  });\n\n  return false;\n};\n\nexport const sendMessage = (data: ChatMessage) => {\n  if (socket) socket.emit('chat', data);\n};\n\nexport const sendBeganTyping = (data: { userId: string; room: string }) => {\n  if (socket) socket.emit('begantyping', data);\n};\n\nexport const sendMessageRead = (data: { userId: string; room: string }) => {\n  if (socket) socket.emit('messageread', data);\n};\n\nexport const switchRooms = (data: RoomJoinRequest) => {\n  if (socket) socket.emit('switch', data);\n};\n"],"names":["useClickedOutside","ref","callback","ignore","useEffect","handleClickOutside","event","forEach","r","current","contains","target","includes","document","addEventListener","removeEventListener","useWindowSize","windowSize","setWindowSize","useState","width","undefined","height","handleResize","window","innerWidth","innerHeight","useScroll","lastScroll","setLastScroll","scroll","setScroll","delta","setDelta","timer","handleScroll","clearTimeout","scrollY","setTimeout","useStore","set","get","isAuthenticated","token","user","notifications","setIsAuthenticated","state","setToken","setUser","setNotifications","addNotification","notification","removeNotification","id","filter","useAuthenticatedSocket","enpoint","namespace","useSocket","url","enabled","socket","initiateSocket","data","io","console","log","room","emit","disconnectSocket","disconnect","subscribetoChat","cb","on","message","sendMessage","sendBeganTyping","sendMessageRead","switchRooms"],"sourceRoot":""}