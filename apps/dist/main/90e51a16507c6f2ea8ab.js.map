{"version":3,"file":"main/90e51a16507c6f2ea8ab.js","mappings":"wjBAaA,MAAMA,EAAO,OAAU;;EAIhB,SAASC,EAAcC,GAC5B,OACE,gCACGA,EAAMC,YAEP,SAACH,EAAI,UAAEE,EAAME,eAAQ,UAAQ,G,iKClBnC,MAAMC,EAAe,CACnB,wBACA,uBACA,uBACA,2BACA,2BACA,uBACA,0BACA,sBACA,2BACA,sBACA,uBACA,wBAGIC,EAAyB,OAAU;;;;;;;;;EAW5BC,EAAiB,KAC5B,MAAOC,EAAaC,IAAkB,IAAAC,UACpCL,EAAaM,KAAKC,MAAMD,KAAKE,SAAWR,EAAaS,UAGjDC,EAAoB,KACxB,MAAMC,EAAQL,KAAKC,MAAMD,KAAKE,SAAWR,EAAaS,QACtDL,EAAeJ,EAAaW,KAQ9B,OALA,IAAAC,YAAU,KACR,MAAMC,EAAWC,YAAYJ,EAAmB,KAChD,MAAO,IAAMK,cAAcF,KAC1B,CAACV,KAGF,UAACF,EAAsB,YACrB,SAAC,EAAAe,YAAW,YACZ,0BACA,0BAAKb,EAAW,qBAAO,IC9CvBc,GAAsB,IAAAC,eAAc,CAAC,GAAI,SAElCC,EAAuB,EAClCpB,SAAAA,MAKA,MAAOqB,EAAeC,IAAoB,IAAAhB,UAAS,IAEnD,OACE,SAACY,EAAoBK,SAAQ,eAACC,OAAO,IAAAlB,UAASe,IAAc,UACzDrB,SAAQ,IAKFyB,EAAkB,KAC7B,MAAOJ,EAAeC,IAAoB,IAAAI,YAAWR,GACrD,MAAO,CACLG,cAAAA,EACAC,iBAAAA,I,wMCTJ,IAAIK,EAAc,kBAAqC,MAChD,SAASC,GAAa,SAAE5B,IAC7B,MAAM,mBAAE6B,EAAkB,SAAEC,EAAQ,MAAEC,IAAU,IAAAC,YA8B1CR,EAAQ,CAAEO,MAAAA,EAAOE,QA5BH,CAClBC,EACAC,KACG,wCACH,IACE,MAAMC,QAAgB,SACpB,kCACAF,GAEFJ,EAASM,EAAQC,KAAKN,OACtBF,GAAmB,GACfM,GACFA,EAASC,EAAQC,KAAKN,OAExB,MAAOO,GACHH,GACFA,OAASI,EAAWD,OAYmBE,SAPvBL,IACpBL,OAASS,GACTV,GAAmB,GAEnBM,MAKF,OAAO,SAACR,EAAYJ,SAAQ,eAACC,MAAOA,GAAK,UAAGxB,SAAQ,GAG/C,MAAMyC,EAAU,IAAM,eAAiBd,G,uDC1CvC,SAASe,GAAe,gBAC7BC,EAAe,OACfC,IAEA,OAAID,EACKC,GAGL,SAAC,KAAQ,CACPC,GAAI,CAAEC,SAAU,UAChBC,MAAO,CAAEC,KAAMC,OAAOC,SAASJ,gBAAU,G,qECLjD,IAAIK,EAAgB,kBAAuC,MACpD,SAASC,GAAiB,SAC/BC,EAAQ,UACRC,EAAS,SACTtD,IAEA,MAAOuD,EAAQC,GAAa,kBAAmCjB,GAE/D,eAAgB,KACd,MAAMgB,GAAS,IAAAE,IAAGJ,EAAU,CAC1BK,KAAM,IAAIJ,MAGZ,OADAE,EAAUD,GACH,KACLA,EAAOI,gBAER,CAACN,EAAUC,IACd,MAeM9B,EAAQ,CACZ+B,OAAAA,EACAK,UAjBoB,KACpB,MAAML,GAAS,IAAAE,IAAG,GAAGJ,KAAYC,KACjCE,EAAUD,GAEVA,EAAOM,GAAG,WAAW,IACZN,KAaTO,aAVuB,KACnBP,IACFA,EAAOI,aACPH,OAAUjB,MAUd,OACE,SAACY,EAAc5B,SAAQ,eAACC,MAAOA,GAAK,UAAGxB,SAAQ,GAI5C,MAAM+D,EAAY,IAAM,eAAiBZ","sources":["webpack://main/../../../libs/design/components/src/lib/page-components.tsx","webpack://main/../../../libs/design/components/src/lib/loading-component.tsx","webpack://main/../../../libs/design/components/src/lib/notification-provider.tsx","webpack://main/../../../libs/design/components/src/lib/auth-provider.tsx","webpack://main/../../../libs/design/components/src/lib/protected-route.tsx","webpack://main/../../../libs/design/components/src/lib/socket-provider.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface TestComponentsProps {\r\n  children: string | React.ReactNode;\r\n  headerLogo: React.ReactNode;\r\n}\r\n\r\nexport type HeaderProps = {\r\n  headerLogo: React.ReactNode;\r\n  to: string;\r\n};\r\n\r\nconst Body = styled.div`\r\n  flex: auto;\r\n`;\r\n\r\nexport function PageComponent(props: TestComponentsProps) {\r\n  return (\r\n    <>\r\n      {props.headerLogo}\r\n\r\n      <Body>{props.children}</Body>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PageComponent;\r\n","import { CubeSpinner } from '@super-rad-poc/design/styles';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst loadingTexts = [\r\n  'Activating astounding',\r\n  'Beginning brilliance',\r\n  'Creating captivating',\r\n  'Extracting extraordinary',\r\n  'Filling with fascinating',\r\n  'Generating greatness',\r\n  'Initializing incredible',\r\n  'Making magnificence',\r\n  'Syncronizing spectacular',\r\n  'Quantifying quality',\r\n  'Rendering remarkable',\r\n  'Preparing phenominal',\r\n];\r\n\r\nconst StyledLoadingContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const LoadingSpinner = () => {\r\n  const [loadingText, setLoadingText] = useState(\r\n    loadingTexts[Math.floor(Math.random() * loadingTexts.length)]\r\n  );\r\n\r\n  const changeLoadingText = () => {\r\n    const index = Math.floor(Math.random() * loadingTexts.length);\r\n    setLoadingText(loadingTexts[index]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(changeLoadingText, 3000);\r\n    return () => clearInterval(interval);\r\n  }, [loadingText]);\r\n\r\n  return (\r\n    <StyledLoadingContainer>\r\n      <CubeSpinner />\r\n      <br />\r\n      <h3>{loadingText}.</h3>\r\n    </StyledLoadingContainer>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport { SnackbarNotification } from '@super-rad-poc/common/models';\r\n\r\nconst NotificationContext = createContext([{}, () => {}]);\r\n\r\nexport const NotificationProvider = ({\r\n  children,\r\n}: React.PropsWithChildren<{\r\n  notifications: SnackbarNotification[];\r\n  setNotifications: (notifications: SnackbarNotification[]) => void;\r\n}>) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  return (\r\n    <NotificationContext.Provider value={useState(notifications)}>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotification = () => {\r\n  const [notifications, setNotifications] = useContext(NotificationContext);\r\n  return {\r\n    notifications,\r\n    setNotifications,\r\n  };\r\n};\r\n","import { User } from '@prisma/client/users';\nimport axios from 'axios';\nimport React from 'react';\nimport { useStore } from '@super-rad-poc/common/hooks';\n\ninterface UserLogin {\n  email: string;\n  password: string;\n}\ninterface AuthContextType {\n  token: string | undefined;\n  onLogin: (loginInfo: UserLogin, callback: VoidFunction) => void;\n  onLogout: (callback: VoidFunction) => void;\n}\n\nlet AuthContext = React.createContext<AuthContextType>(null!);\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const { setIsAuthenticated, setToken, token } = useStore();\n\n  const handleLogin = async (\n    loginUser: UserLogin,\n    callback?: (jwt?: string, error?: Error) => void\n  ) => {\n    try {\n      const userJwt = await axios.post(\n        'http://localhost:5002/authorize',\n        loginUser\n      );\n      setToken(userJwt.data.token);\n      setIsAuthenticated(true);\n      if (callback) {\n        callback(userJwt.data.token);\n      }\n    } catch (e: any) {\n      if (callback) {\n        callback(undefined, e);\n      }\n    }\n  };\n\n  const handleLogout = (callback: () => void) => {\n    setToken(undefined);\n    setIsAuthenticated(false);\n    //Call endpoit to logout.\n    callback();\n  };\n\n  const value = { token, onLogin: handleLogin, onLogout: handleLogout };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport const useAuth = () => React.useContext(AuthContext);\n","import { PropsWithChildren } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { from } from 'rxjs';\nimport { useAuth } from './auth-provider';\n\nexport type ProtectedRouteProps = {\n  isAuthenticated: boolean;\n  outlet: JSX.Element;\n};\n\nexport function ProtectedRoute({\n  isAuthenticated,\n  outlet,\n}: ProtectedRouteProps) {\n  if (isAuthenticated) {\n    return outlet;\n  } else {\n    return (\n      <Navigate\n        to={{ pathname: '/login' }}\n        state={{ from: window.location.pathname }}\n      />\n    );\n  }\n}\n\n// export const ProtectedRoute = ({ children }: Props) => {\n//   const { token } = useAuth();\n\n//   if (!token) {\n//     return (\n//      <Navigate to=\"/login\" />\n//     );\n//   }\n\n//   return children;\n// };\n","import React from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nexport interface SocketContextType {\n  socket: Socket | undefined;\n  onConnect: () => void;\n  onDisconnect: () => void;\n}\n\nexport interface SocketProviderProps {\n  endpoint: string;\n  namespace: string;\n  children: React.ReactNode;\n}\n\nlet SocketContext = React.createContext<SocketContextType>(null!);\nexport function SocketIOProvider({\n  endpoint,\n  namespace,\n  children,\n}: SocketProviderProps) {\n  const [socket, setSocket] = React.useState<Socket | undefined>(undefined);\n\n  React.useEffect(() => {\n    const socket = io(endpoint, {\n      path: `/${namespace}`,\n    });\n    setSocket(socket);\n    return () => {\n      socket.disconnect();\n    };\n  }, [endpoint, namespace]);\n  const handleConnect = () => {\n    const socket = io(`${endpoint}/${namespace}`);\n    setSocket(socket);\n\n    socket.on('connect', () => {\n      return socket;\n    });\n  };\n  const handleDisconnect = () => {\n    if (socket) {\n      socket.disconnect();\n      setSocket(undefined);\n    }\n  };\n\n  const value = {\n    socket,\n    onConnect: handleConnect,\n    onDisconnect: handleDisconnect,\n  };\n\n  return (\n    <SocketContext.Provider value={value}>{children}</SocketContext.Provider>\n  );\n}\n\nexport const useSocket = () => React.useContext(SocketContext);\n"],"names":["Body","PageComponent","props","headerLogo","children","loadingTexts","StyledLoadingContainer","LoadingSpinner","loadingText","setLoadingText","useState","Math","floor","random","length","changeLoadingText","index","useEffect","interval","setInterval","clearInterval","CubeSpinner","NotificationContext","createContext","NotificationProvider","notifications","setNotifications","Provider","value","useNotification","useContext","AuthContext","AuthProvider","setIsAuthenticated","setToken","token","useStore","onLogin","loginUser","callback","userJwt","data","e","undefined","onLogout","useAuth","ProtectedRoute","isAuthenticated","outlet","to","pathname","state","from","window","location","SocketContext","SocketIOProvider","endpoint","namespace","socket","setSocket","io","path","disconnect","onConnect","on","onDisconnect","useSocket"],"sourceRoot":""}