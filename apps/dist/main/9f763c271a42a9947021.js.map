{"version":3,"file":"main/9f763c271a42a9947021.js","mappings":"wRAIA,IAJA,IAAMA,EAAQ,mEAGRC,EAA+B,oBAAfC,WAA6B,GAAK,IAAIA,WAAW,KAC9DC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAC9BF,EAAOD,EAAMK,WAAWF,IAAMA,E,IAGrBG,EAAS,SAACC,GACnB,IACIJ,EADAK,EAAQ,IAAIN,WAAWK,GAEvBE,EAAMD,EAAMJ,OACZM,EAAS,GAEb,IAAKP,EAAI,EAAGA,EAAIM,EAAKN,GAAK,EACtBO,GAAUV,EAAMQ,EAAML,IAAM,GAC5BO,GAAUV,GAAmB,EAAXQ,EAAML,KAAW,EAAMK,EAAML,EAAI,IAAM,GACzDO,GAAUV,GAAuB,GAAfQ,EAAML,EAAI,KAAY,EAAMK,EAAML,EAAI,IAAM,GAC9DO,GAAUV,EAAqB,GAAfQ,EAAML,EAAI,IAS9B,OANIM,EAAM,GAAM,EACZC,EAASA,EAAOC,UAAU,EAAGD,EAAON,OAAS,GAAK,IAC3CK,EAAM,GAAM,IACnBC,EAASA,EAAOC,UAAU,EAAGD,EAAON,OAAS,GAAK,MAG/CM,GAGEE,EAAS,SAACF,GACnB,IAEIP,EAEAU,EACAC,EACAC,EACAC,EAPAC,EAA+B,IAAhBP,EAAON,OACtBK,EAAMC,EAAON,OAEbc,EAAI,EAM0B,MAA9BR,EAAOA,EAAON,OAAS,KACvBa,IACkC,MAA9BP,EAAOA,EAAON,OAAS,IACvBa,KAIR,IAAMV,EAAc,IAAIY,YAAYF,GAChCT,EAAQ,IAAIN,WAAWK,GAE3B,IAAKJ,EAAI,EAAGA,EAAIM,EAAKN,GAAK,EACtBU,EAAWZ,EAAOS,EAAOL,WAAWF,IACpCW,EAAWb,EAAOS,EAAOL,WAAWF,EAAI,IACxCY,EAAWd,EAAOS,EAAOL,WAAWF,EAAI,IACxCa,EAAWf,EAAOS,EAAOL,WAAWF,EAAI,IAExCK,EAAMU,KAAQL,GAAY,EAAMC,GAAY,EAC5CN,EAAMU,MAAoB,GAAXJ,IAAkB,EAAMC,GAAY,EACnDP,EAAMU,MAAoB,EAAXH,IAAiB,EAAiB,GAAXC,EAG1C,OAAOT,I,sEChDX,SAASa,EAAQC,GACf,GAAIA,EAAK,OAWX,SAAeA,GACb,IAAK,IAAIC,KAAOF,EAAQG,UACtBF,EAAIC,GAAOF,EAAQG,UAAUD,GAE/B,OAAOD,EAfSG,CAAMH,GATxBI,EAAQL,QAAUA,EAoClBA,EAAQG,UAAUG,GAClBN,EAAQG,UAAUI,iBAAmB,SAASC,EAAOC,GAInD,OAHAC,KAAKC,WAAaD,KAAKC,YAAc,IACpCD,KAAKC,WAAW,IAAMH,GAASE,KAAKC,WAAW,IAAMH,IAAU,IAC7DI,KAAKH,GACDC,MAaTV,EAAQG,UAAUU,KAAO,SAASL,EAAOC,GACvC,SAASH,IACPI,KAAKI,IAAIN,EAAOF,GAChBG,EAAGM,MAAML,KAAMM,WAKjB,OAFAV,EAAGG,GAAKA,EACRC,KAAKJ,GAAGE,EAAOF,GACRI,MAaTV,EAAQG,UAAUW,IAClBd,EAAQG,UAAUc,eAClBjB,EAAQG,UAAUe,mBAClBlB,EAAQG,UAAUgB,oBAAsB,SAASX,EAAOC,GAItD,GAHAC,KAAKC,WAAaD,KAAKC,YAAc,GAGjC,GAAKK,UAAUhC,OAEjB,OADA0B,KAAKC,WAAa,GACXD,KAIT,IAUIU,EAVAC,EAAYX,KAAKC,WAAW,IAAMH,GACtC,IAAKa,EAAW,OAAOX,KAGvB,GAAI,GAAKM,UAAUhC,OAEjB,cADO0B,KAAKC,WAAW,IAAMH,GACtBE,KAKT,IAAK,IAAI3B,EAAI,EAAGA,EAAIsC,EAAUrC,OAAQD,IAEpC,IADAqC,EAAKC,EAAUtC,MACJ0B,GAAMW,EAAGX,KAAOA,EAAI,CAC7BY,EAAUC,OAAOvC,EAAG,GACpB,MAUJ,OAJyB,IAArBsC,EAAUrC,eACL0B,KAAKC,WAAW,IAAMH,GAGxBE,MAWTV,EAAQG,UAAUoB,KAAO,SAASf,GAChCE,KAAKC,WAAaD,KAAKC,YAAc,GAKrC,IAHA,IAAIa,EAAO,IAAIC,MAAMT,UAAUhC,OAAS,GACpCqC,EAAYX,KAAKC,WAAW,IAAMH,GAE7BzB,EAAI,EAAGA,EAAIiC,UAAUhC,OAAQD,IACpCyC,EAAKzC,EAAI,GAAKiC,UAAUjC,GAG1B,GAAIsC,EAEG,CAAItC,EAAI,EAAb,IAAK,IAAWM,GADhBgC,EAAYA,EAAUK,MAAM,IACI1C,OAAQD,EAAIM,IAAON,EACjDsC,EAAUtC,GAAGgC,MAAML,KAAMc,GAI7B,OAAOd,MAITV,EAAQG,UAAUwB,aAAe3B,EAAQG,UAAUoB,KAUnDvB,EAAQG,UAAUyB,UAAY,SAASpB,GAErC,OADAE,KAAKC,WAAaD,KAAKC,YAAc,GAC9BD,KAAKC,WAAW,IAAMH,IAAU,IAWzCR,EAAQG,UAAU0B,aAAe,SAASrB,GACxC,QAAUE,KAAKkB,UAAUpB,GAAOxB,S,4CC3JlC,SAAS8C,EAAQC,GACfA,EAAOA,GAAQ,GACfrB,KAAKsB,GAAKD,EAAKE,KAAO,IACtBvB,KAAKwB,IAAMH,EAAKG,KAAO,IACvBxB,KAAKyB,OAASJ,EAAKI,QAAU,EAC7BzB,KAAK0B,OAASL,EAAKK,OAAS,GAAKL,EAAKK,QAAU,EAAIL,EAAKK,OAAS,EAClE1B,KAAK2B,SAAW,EApBlBC,EAAOjC,QAAUyB,EA8BjBA,EAAQ3B,UAAUoC,SAAW,WAC3B,IAAIP,EAAKtB,KAAKsB,GAAKQ,KAAKC,IAAI/B,KAAKyB,OAAQzB,KAAK2B,YAC9C,GAAI3B,KAAK0B,OAAQ,CACf,IAAIM,EAAQF,KAAKG,SACbC,EAAYJ,KAAKK,MAAMH,EAAOhC,KAAK0B,OAASJ,GAChDA,EAAoC,IAAN,EAAxBQ,KAAKK,MAAa,GAAPH,IAAwBV,EAAKY,EAAYZ,EAAKY,EAEjE,OAAgC,EAAzBJ,KAAKP,IAAID,EAAItB,KAAKwB,MAS3BJ,EAAQ3B,UAAU2C,MAAQ,WACxBpC,KAAK2B,SAAW,GASlBP,EAAQ3B,UAAU4C,OAAS,SAASd,GAClCvB,KAAKsB,GAAKC,GASZH,EAAQ3B,UAAU6C,OAAS,SAASd,GAClCxB,KAAKwB,IAAMA,GASbJ,EAAQ3B,UAAU8C,UAAY,SAASb,GACrC1B,KAAK0B,OAASA,I,8CCzEhB,IACEE,EAAOjC,QAAoC,oBAAnB6C,gBACtB,oBAAqB,IAAIA,eAC3B,MAAOC,GAGPb,EAAOjC,SAAU,I,iDCPnBA,EAAQnB,OAAS,SAAUe,GACzB,IAAImD,EAAM,GAEV,IAAK,IAAIrE,KAAKkB,EACRA,EAAIoD,eAAetE,KACjBqE,EAAIpE,SAAQoE,GAAO,KACvBA,GAAOE,mBAAmBvE,GAAK,IAAMuE,mBAAmBrD,EAAIlB,KAIhE,OAAOqE,GAUT/C,EAAQb,OAAS,SAAS+D,GAGxB,IAFA,IAAIC,EAAM,GACNC,EAAQF,EAAGG,MAAM,KACZ3E,EAAI,EAAG4E,EAAIF,EAAMzE,OAAQD,EAAI4E,EAAG5E,IAAK,CAC5C,IAAI6E,EAAOH,EAAM1E,GAAG2E,MAAM,KAC1BF,EAAIK,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,IAE7D,OAAOJ,I,8CC5BT,IAAIM,EAAK,0OAELC,EAAQ,CACR,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAGzIzB,EAAOjC,QAAU,SAAkB+C,GAC/B,IA6BoBY,EAEhBC,EA/BAC,EAAMd,EACNe,EAAIf,EAAIgB,QAAQ,KAChBC,EAAIjB,EAAIgB,QAAQ,MAEV,GAAND,IAAiB,GAANE,IACXjB,EAAMA,EAAI7D,UAAU,EAAG4E,GAAKf,EAAI7D,UAAU4E,EAAGE,GAAGC,QAAQ,KAAM,KAAOlB,EAAI7D,UAAU8E,EAAGjB,EAAIpE,SAO9F,IAJA,IAmCmBuF,EACfC,EApCAC,EAAIX,EAAGY,KAAKtB,GAAO,IACnBuB,EAAM,GACN5F,EAAI,GAEDA,KACH4F,EAAIZ,EAAMhF,IAAM0F,EAAE1F,IAAM,GAa5B,OAVU,GAANoF,IAAiB,GAANE,IACXM,EAAIC,OAASV,EACbS,EAAIE,KAAOF,EAAIE,KAAKtF,UAAU,EAAGoF,EAAIE,KAAK7F,OAAS,GAAGsF,QAAQ,KAAM,KACpEK,EAAIG,UAAYH,EAAIG,UAAUR,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9EK,EAAII,SAAU,GAGlBJ,EAAIK,WAMgBhB,EANWW,EAAG,KAQ9BV,EAAQD,EAAKM,QADN,WACoB,KAAKZ,MAAM,KAEjB,KAArBM,EAAKiB,OAAO,EAAG,IAA6B,IAAhBjB,EAAKhF,QACjCiF,EAAM3C,OAAO,EAAG,GAEmB,KAAnC0C,EAAKiB,OAAOjB,EAAKhF,OAAS,EAAG,IAC7BiF,EAAM3C,OAAO2C,EAAMjF,OAAS,EAAG,GAG5BiF,GAhBPU,EAAIO,UAmBeX,EAnBUI,EAAG,MAoB5BH,EAAO,GAEXD,EAAMD,QAAQ,6BAA6B,SAAUa,EAAIC,EAAIC,GACrDD,IACAZ,EAAKY,GAAMC,MAIZb,GA1BAG,I,wDCtCX,IAKIW,EALAC,EAAW,mEAAmE7B,MAAM,IAEpF8B,EAAM,GACNC,EAAO,EACP1G,EAAI,EAUR,SAASG,EAAOwG,GACd,IAAIC,EAAU,GAEd,GACEA,EAAUJ,EAASG,EAjBV,IAiB0BC,EACnCD,EAAMlD,KAAKK,MAAM6C,EAlBR,UAmBFA,EAAM,GAEf,OAAOC,EA0BT,SAASC,IACP,IAAIC,EAAM3G,GAAQ,IAAI4G,MAEtB,OAAID,IAAQP,GAAaG,EAAO,EAAGH,EAAOO,GACnCA,EAAK,IAAK3G,EAAOuG,KAM1B,KAAO1G,EAzDM,GAyDMA,IAAKyG,EAAID,EAASxG,IAAMA,EAK3C6G,EAAM1G,OAASA,EACf0G,EAAMpG,OAhCN,SAAgB4D,GACd,IAAI2C,EAAU,EAEd,IAAKhH,EAAI,EAAGA,EAAIqE,EAAIpE,OAAQD,IAC1BgH,EAnCS,GAmCCA,EAAmBP,EAAIpC,EAAI4C,OAAOjH,IAG9C,OAAOgH,GA0BTzD,EAAOjC,QAAUuF,G,6RCnEjB,QACwB,oBAATK,KACAA,KAEgB,oBAAXC,OACLA,OAGAC,SAAS,cAATA,GCLA,SAAS,EAACpE,GACrB,MAAMqE,EAAUrE,EAAKqE,QAErB,IACI,GAAI,oBAAuBlD,kBAAoBkD,GAAWC,GACtD,OAAO,IAAInD,eAGnB,MAAOmB,IACP,IAAK+B,EACD,IACI,OAAO,IAAIE,EAAW,CAAC,UAAUC,OAAO,UAAUC,KAAK,OAAM,qBAEjE,MAAOnC,KCfR,SAASoC,EAAKxG,KAAQyG,GACzB,OAAOA,EAAKC,QAAO,CAACC,EAAKC,KACjB5G,EAAIoD,eAAewD,KACnBD,EAAIC,GAAK5G,EAAI4G,IAEVD,IACR,IAGP,MAAME,EAAqBC,WACrBC,EAAuBC,aACtB,SAASC,EAAsBjH,EAAK8B,GACnCA,EAAKoF,iBACLlH,EAAImH,aAAeN,EAAmBO,KAAKf,GAC3CrG,EAAIqH,eAAiBN,EAAqBK,KAAKf,KAG/CrG,EAAImH,aAAeL,WAAWM,KAAKf,GACnCrG,EAAIqH,eAAiBL,aAAaI,KAAKf,I,uECnB/C,MAAMiB,EAAeC,OAAOC,OAAO,MACnCF,EAAY,KAAW,IACvBA,EAAY,MAAY,IACxBA,EAAY,KAAW,IACvBA,EAAY,KAAW,IACvBA,EAAY,QAAc,IAC1BA,EAAY,QAAc,IAC1BA,EAAY,KAAW,IACvB,MAAMG,EAAuBF,OAAOC,OAAO,MAC3CD,OAAOG,KAAKJ,GAAcK,SAAQ1H,IAC9BwH,EAAqBH,EAAarH,IAAQA,KAE9C,MAAM2H,EAAe,CAAEC,KAAM,QAAStD,KAAM,gBCXtCuD,EAAiC,mBAATC,MACT,oBAATA,MACqC,6BAAzCR,OAAOrH,UAAU8H,SAASC,KAAKF,MACjCG,EAA+C,mBAAhBpI,YA4B/BqI,EAAqB,CAAC5D,EAAM6D,KAC9B,MAAMC,EAAa,IAAIC,WAKvB,OAJAD,EAAWE,OAAS,WAChB,MAAMC,EAAUH,EAAWI,OAAOhF,MAAM,KAAK,GAC7C2E,EAAS,IAAMI,IAEZH,EAAWK,cAAcnE,IAEpC,EA7BqB,EAAGsD,KAAAA,EAAMtD,KAAAA,GAAQoE,EAAgBP,KAClD,OAAIN,GAAkBvD,aAAgBwD,KAC9BY,EACOP,EAAS7D,GAGT4D,EAAmB5D,EAAM6D,GAG/BF,IACJ3D,aAAgBzE,cAfVE,EAegCuE,EAdN,mBAAvBzE,YAAY8I,OACpB9I,YAAY8I,OAAO5I,GACnBA,GAAOA,EAAI6I,kBAAkB/I,cAa3B6I,EACOP,EAAS7D,GAGT4D,EAAmB,IAAIJ,KAAK,CAACxD,IAAQ6D,GAI7CA,EAASd,EAAaO,IAAStD,GAAQ,KAxBnCvE,IAAAA,G,8FCJf,MAAMkI,EAA+C,mBAAhBpI,YA4B/BgJ,EAAqB,CAACvE,EAAMwE,KAC9B,GAAIb,EAAuB,CACvB,MAAMpC,GAAUvG,EAAAA,EAAAA,QAAOgF,GACvB,OAAOyE,EAAUlD,EAASiD,GAG1B,MAAO,CAAE1J,QAAQ,EAAMkF,KAAAA,IAGzByE,EAAY,CAACzE,EAAMwE,IAEZ,SADDA,GAEOxE,aAAgBzE,YAAc,IAAIiI,KAAK,CAACxD,IAGxCA,EAGnB,EA7CqB,CAAC0E,EAAeF,KACjC,GAA6B,iBAAlBE,EACP,MAAO,CACHpB,KAAM,UACNtD,KAAMyE,EAAUC,EAAeF,IAGvC,MAAMlB,EAAOoB,EAAclD,OAAO,GAClC,MAAa,MAAT8B,EACO,CACHA,KAAM,UACNtD,KAAMuE,EAAmBG,EAAc3J,UAAU,GAAIyJ,IAG1CtB,EAAqBI,GAIjCoB,EAAclK,OAAS,EACxB,CACE8I,KAAMJ,EAAqBI,GAC3BtD,KAAM0E,EAAc3J,UAAU,IAEhC,CACEuI,KAAMJ,EAAqBI,IARxBD,GCjBTsB,EAAYC,OAAOC,aAAa,ICC/B,MAAMC,UAAkBtJ,EAAAA,QAO3BuJ,YAAYxH,GACRyH,QACA9I,KAAK+I,UAAW,EAChBvC,EAAsBxG,KAAMqB,GAC5BrB,KAAKqB,KAAOA,EACZrB,KAAK6D,MAAQxC,EAAKwC,MAClB7D,KAAKgJ,WAAa,GAClBhJ,KAAKiJ,OAAS5H,EAAK4H,OASvBC,QAAQC,EAAKC,GACT,MAAM3G,EAAM,IAAI4G,MAAMF,GAMtB,OAJA1G,EAAI2E,KAAO,iBAEX3E,EAAI6G,YAAcF,EAClBN,MAAMjI,KAAK,QAAS4B,GACbzC,KAOXuJ,OAKI,MAJI,WAAavJ,KAAKgJ,YAAc,KAAOhJ,KAAKgJ,aAC5ChJ,KAAKgJ,WAAa,UAClBhJ,KAAKwJ,UAEFxJ,KAOXyJ,QAKI,MAJI,YAAczJ,KAAKgJ,YAAc,SAAWhJ,KAAKgJ,aACjDhJ,KAAK0J,UACL1J,KAAK2J,WAEF3J,KAQX4J,KAAKC,GACG,SAAW7J,KAAKgJ,YAChBhJ,KAAK8J,MAAMD,GAWnBE,SACI/J,KAAKgJ,WAAa,OAClBhJ,KAAK+I,UAAW,EAChBD,MAAMjI,KAAK,QAQfmJ,OAAOlG,GACH,MAAMmG,EAASC,EAAapG,EAAM9D,KAAKiJ,OAAOX,YAC9CtI,KAAKmK,SAASF,GAOlBE,SAASF,GACLnB,MAAMjI,KAAK,SAAUoJ,GAOzBN,UACI3J,KAAKgJ,WAAa,SAClBF,MAAMjI,KAAK,U,8FCxGZ,MAAMuJ,UAAgBxB,EACzBC,cACIC,SAASxI,WACTN,KAAKqK,SAAU,EAKfC,WACA,MAAO,UAQXd,SACIxJ,KAAKuK,OAQTC,MAAMC,GACFzK,KAAKgJ,WAAa,UAClB,MAAMwB,EAAQ,KACVxK,KAAKgJ,WAAa,SAClByB,KAEJ,GAAIzK,KAAKqK,UAAYrK,KAAK+I,SAAU,CAChC,IAAI2B,EAAQ,EACR1K,KAAKqK,UACLK,IACA1K,KAAKG,KAAK,gBAAgB,aACpBuK,GAASF,QAGdxK,KAAK+I,WACN2B,IACA1K,KAAKG,KAAK,SAAS,aACbuK,GAASF,aAKnBA,IAQRD,OACIvK,KAAKqK,SAAU,EACfrK,KAAK2K,SACL3K,KAAKa,KAAK,QAOdmJ,OAAOlG,GFpDW,EAAC8G,EAAgBtC,KACnC,MAAMuC,EAAiBD,EAAe5H,MAAMyF,GACtCoB,EAAU,GAChB,IAAK,IAAIxL,EAAI,EAAGA,EAAIwM,EAAevM,OAAQD,IAAK,CAC5C,MAAMyM,EAAgBZ,EAAaW,EAAexM,GAAIiK,GAEtD,GADAuB,EAAQ3J,KAAK4K,GACc,UAAvBA,EAAc1D,KACd,MAGR,OAAOyC,GEyDHkB,CAAcjH,EAAM9D,KAAKiJ,OAAOX,YAAYpB,SAd3B+C,IAMb,GAJI,YAAcjK,KAAKgJ,YAA8B,SAAhBiB,EAAO7C,MACxCpH,KAAK+J,SAGL,UAAYE,EAAO7C,KAEnB,OADApH,KAAK2J,WACE,EAGX3J,KAAKmK,SAASF,MAKd,WAAajK,KAAKgJ,aAElBhJ,KAAKqK,SAAU,EACfrK,KAAKa,KAAK,gBACN,SAAWb,KAAKgJ,YAChBhJ,KAAKuK,QAWjBb,UACI,MAAMD,EAAQ,KACVzJ,KAAK8J,MAAM,CAAC,CAAE1C,KAAM,YAEpB,SAAWpH,KAAKgJ,WAChBS,IAKAzJ,KAAKG,KAAK,OAAQsJ,GAU1BK,MAAMD,GACF7J,KAAK+I,UAAW,EFzHF,EAACc,EAASlC,KAE5B,MAAMrJ,EAASuL,EAAQvL,OACjBuM,EAAiB,IAAI9J,MAAMzC,GACjC,IAAI0M,EAAQ,EACZnB,EAAQ3C,SAAQ,CAAC+C,EAAQ5L,KAErB4M,EAAahB,GAAQ,GAAOzB,IACxBqC,EAAexM,GAAKmK,IACdwC,IAAU1M,GACZqJ,EAASkD,EAAe/E,KAAK2C,WEgHrCyC,CAAcrB,GAAS/F,IACnB9D,KAAKmL,QAAQrH,GAAM,KACf9D,KAAK+I,UAAW,EAChB/I,KAAKa,KAAK,eAStBoD,MACI,IAAIJ,EAAQ7D,KAAK6D,OAAS,GAC1B,MAAMuH,EAASpL,KAAKqB,KAAKgK,OAAS,QAAU,OAC5C,IAAIC,EAAO,IAEP,IAAUtL,KAAKqB,KAAKkK,oBACpB1H,EAAM7D,KAAKqB,KAAKmK,gBAAkBtG,KAEjClF,KAAKkI,gBAAmBrE,EAAM4H,MAC/B5H,EAAM6H,IAAM,GAGZ1L,KAAKqB,KAAKiK,OACR,UAAYF,GAAqC,MAA3BO,OAAO3L,KAAKqB,KAAKiK,OACpC,SAAWF,GAAqC,KAA3BO,OAAO3L,KAAKqB,KAAKiK,SAC3CA,EAAO,IAAMtL,KAAKqB,KAAKiK,MAE3B,MAAMM,EAAeC,EAAQrN,OAAOqF,GAEpC,OAAQuH,EACJ,QAF8C,IAArCpL,KAAKqB,KAAKyK,SAASpI,QAAQ,KAG5B,IAAM1D,KAAKqB,KAAKyK,SAAW,IAAM9L,KAAKqB,KAAKyK,UACnDR,EACAtL,KAAKqB,KAAKiC,MACTsI,EAAatN,OAAS,IAAMsN,EAAe,KCxJxD,SAASG,KACT,MAAMC,EAIK,MAHK,IAAIxJ,EAAe,CAC3BkD,SAAS,IAEMuG,aAuEhB,MAAMC,UAAgB5M,EAAAA,QAOzBuJ,YAAY5E,EAAK5C,GACbyH,QACAtC,EAAsBxG,KAAMqB,GAC5BrB,KAAKqB,KAAOA,EACZrB,KAAKmM,OAAS9K,EAAK8K,QAAU,MAC7BnM,KAAKiE,IAAMA,EACXjE,KAAKoM,OAAQ,IAAU/K,EAAK+K,MAC5BpM,KAAK8D,UAAOuI,IAAchL,EAAKyC,KAAOzC,EAAKyC,KAAO,KAClD9D,KAAK+G,SAOTA,SACI,MAAM1F,EAAO0E,EAAK/F,KAAKqB,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjHA,EAAKqE,UAAY1F,KAAKqB,KAAKiL,GAC3BjL,EAAKkL,UAAYvM,KAAKqB,KAAKmL,GAC3B,MAAMC,EAAOzM,KAAKyM,IAAM,IAAIjK,EAAenB,GAC3C,IACIoL,EAAIlD,KAAKvJ,KAAKmM,OAAQnM,KAAKiE,IAAKjE,KAAKoM,OACrC,IACI,GAAIpM,KAAKqB,KAAKqL,aAAc,CACxBD,EAAIE,uBAAyBF,EAAIE,uBAAsB,GACvD,IAAK,IAAItO,KAAK2B,KAAKqB,KAAKqL,aAChB1M,KAAKqB,KAAKqL,aAAa/J,eAAetE,IACtCoO,EAAIG,iBAAiBvO,EAAG2B,KAAKqB,KAAKqL,aAAarO,KAK/D,MAAOsF,IACP,GAAI,SAAW3D,KAAKmM,OAChB,IACIM,EAAIG,iBAAiB,eAAgB,4BAEzC,MAAOjJ,IAEX,IACI8I,EAAIG,iBAAiB,SAAU,OAEnC,MAAOjJ,IAEH,oBAAqB8I,IACrBA,EAAII,gBAAkB7M,KAAKqB,KAAKwL,iBAEhC7M,KAAKqB,KAAKyL,iBACVL,EAAIM,QAAU/M,KAAKqB,KAAKyL,gBAE5BL,EAAIO,mBAAqB,KACjB,IAAMP,EAAIzD,aAEV,MAAQyD,EAAIQ,QAAU,OAASR,EAAIQ,OACnCjN,KAAKkN,SAKLlN,KAAK0G,cAAa,KACd1G,KAAKkJ,QAA8B,iBAAfuD,EAAIQ,OAAsBR,EAAIQ,OAAS,KAC5D,KAGXR,EAAI7C,KAAK5J,KAAK8D,MAElB,MAAOH,GAOH,YAHA3D,KAAK0G,cAAa,KACd1G,KAAKkJ,QAAQvF,KACd,GAGiB,oBAAbwJ,WACPnN,KAAKoN,MAAQlB,EAAQmB,gBACrBnB,EAAQoB,SAAStN,KAAKoN,OAASpN,MAQvCuN,YACIvN,KAAKa,KAAK,WACVb,KAAKwN,UAOTxD,OAAOlG,GACH9D,KAAKa,KAAK,OAAQiD,GAClB9D,KAAKuN,YAOTrE,QAAQzG,GACJzC,KAAKa,KAAK,QAAS4B,GACnBzC,KAAKwN,SAAQ,GAOjBA,QAAQC,GACJ,QAAI,IAAuBzN,KAAKyM,KAAO,OAASzM,KAAKyM,IAArD,CAIA,GADAzM,KAAKyM,IAAIO,mBAAqBjB,EAC1B0B,EACA,IACIzN,KAAKyM,IAAIiB,QAEb,MAAO/J,IAEa,oBAAbwJ,iBACAjB,EAAQoB,SAAStN,KAAKoN,OAEjCpN,KAAKyM,IAAM,MAOfS,SACI,MAAMpJ,EAAO9D,KAAKyM,IAAIkB,aACT,OAAT7J,GACA9D,KAAKgK,OAAOlG,GAQpB4J,QACI1N,KAAKwN,WAqBb,SAASI,IACL,IAAK,IAAIvP,KAAK6N,EAAQoB,SACdpB,EAAQoB,SAAS3K,eAAetE,IAChC6N,EAAQoB,SAASjP,GAAGqP,QArBhCxB,EAAQmB,cAAgB,EACxBnB,EAAQoB,SAAW,GAMK,oBAAbH,WAEoB,mBAAhBU,YAEPA,YAAY,WAAYD,GAES,mBAArB/N,kBAEZA,iBADyB,eAAgB+F,EAAa,WAAa,SAChCgI,GAAe,IC9PnD,MAAME,EACqC,mBAAZC,SAAqD,mBAApBA,QAAQC,QAEhEtN,GAAMqN,QAAQC,UAAUC,KAAKvN,GAG7B,CAACA,EAAIgG,IAAiBA,EAAahG,EAAI,GAGzCwN,EAAYtI,EAAAA,WAAwBA,EAAAA,aCH3CuI,EAAqC,oBAAdC,WACI,iBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cACf,MAAMC,UAAW3F,EAOpBC,YAAYxH,GACRyH,MAAMzH,GACNrB,KAAKkI,gBAAkB7G,EAAKmN,YAO5BlE,WACA,MAAO,YAOXd,SACI,IAAKxJ,KAAKyO,QAEN,OAEJ,MAAMxK,EAAMjE,KAAKiE,MACXyK,EAAY1O,KAAKqB,KAAKqN,UAEtBrN,EAAO8M,EACP,GACApI,EAAK/F,KAAKqB,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAChMrB,KAAKqB,KAAKqL,eACVrL,EAAKsN,QAAU3O,KAAKqB,KAAKqL,cAE7B,IACI1M,KAAK4O,GACyBT,EAIpB,IAAID,EAAUjK,EAAKyK,EAAWrN,GAH9BqN,EACI,IAAIR,EAAUjK,EAAKyK,GACnB,IAAIR,EAAUjK,GAGhC,MAAOxB,GACH,OAAOzC,KAAKa,KAAK,QAAS4B,GAE9BzC,KAAK4O,GAAGtG,WAAatI,KAAKiJ,OAAOX,YD/CR,cCgDzBtI,KAAK6O,oBAOTA,oBACI7O,KAAK4O,GAAGE,OAAS,KACT9O,KAAKqB,KAAK0N,WACV/O,KAAK4O,GAAGI,QAAQC,QAEpBjP,KAAK+J,UAET/J,KAAK4O,GAAGM,QAAUlP,KAAK2J,QAAQhD,KAAK3G,MACpCA,KAAK4O,GAAGO,UAAYC,GAAMpP,KAAKgK,OAAOoF,EAAGtL,MACzC9D,KAAK4O,GAAGS,QAAU1L,GAAK3D,KAAKkJ,QAAQ,kBAAmBvF,GAQ3DmG,MAAMD,GACF7J,KAAK+I,UAAW,EAGhB,IAAK,IAAI1K,EAAI,EAAGA,EAAIwL,EAAQvL,OAAQD,IAAK,CACrC,MAAM4L,EAASJ,EAAQxL,GACjBiR,EAAajR,IAAMwL,EAAQvL,OAAS,EAC1C2M,EAAahB,EAAQjK,KAAKkI,gBAAgBpE,IAiBtC,IAGQ9D,KAAK4O,GAAGhF,KAAK9F,GAMrB,MAAOH,IAEH2L,GAGAxB,GAAS,KACL9N,KAAK+I,UAAW,EAChB/I,KAAKa,KAAK,WACXb,KAAK0G,kBAUxBgD,eAC2B,IAAZ1J,KAAK4O,KACZ5O,KAAK4O,GAAGnF,QACRzJ,KAAK4O,GAAK,MAQlB3K,MACI,IAAIJ,EAAQ7D,KAAK6D,OAAS,GAC1B,MAAMuH,EAASpL,KAAKqB,KAAKgK,OAAS,MAAQ,KAC1C,IAAIC,EAAO,GAEPtL,KAAKqB,KAAKiK,OACR,QAAUF,GAAqC,MAA3BO,OAAO3L,KAAKqB,KAAKiK,OAClC,OAASF,GAAqC,KAA3BO,OAAO3L,KAAKqB,KAAKiK,SACzCA,EAAO,IAAMtL,KAAKqB,KAAKiK,MAGvBtL,KAAKqB,KAAKkK,oBACV1H,EAAM7D,KAAKqB,KAAKmK,gBAAkBtG,KAGjClF,KAAKkI,iBACNrE,EAAM6H,IAAM,GAEhB,MAAME,EAAeC,EAAQrN,OAAOqF,GAEpC,OAAQuH,EACJ,QAF8C,IAArCpL,KAAKqB,KAAKyK,SAASpI,QAAQ,KAG5B,IAAM1D,KAAKqB,KAAKyK,SAAW,IAAM9L,KAAKqB,KAAKyK,UACnDR,EACAtL,KAAKqB,KAAKiC,MACTsI,EAAatN,OAAS,IAAMsN,EAAe,IAQpD6C,QACI,SAAUP,GACJ,iBAAkBA,GAAalO,KAAKsK,OAASiE,EAAG9O,UAAU6K,OCnLjE,MAAMiF,EAAa,CACtBC,UAAWjB,EACXlE,QHYG,cAAkBD,EAOrBvB,YAAYxH,GAER,GADAyH,MAAMzH,GACkB,oBAAboO,SAA0B,CACjC,MAAMC,EAAQ,WAAaD,SAASE,SACpC,IAAIrE,EAAOmE,SAASnE,KAEfA,IACDA,EAAOoE,EAAQ,MAAQ,MAE3B1P,KAAKsM,GACoB,oBAAbmD,UACJpO,EAAKyK,WAAa2D,SAAS3D,UAC3BR,IAASjK,EAAKiK,KACtBtL,KAAKwM,GAAKnL,EAAKgK,SAAWqE,EAK9B,MAAMlB,EAAcnN,GAAQA,EAAKmN,YACjCxO,KAAKkI,eAAiB8D,IAAYwC,EAQtCoB,QAAQvO,EAAO,IAEX,OADAyF,OAAO+I,OAAOxO,EAAM,CAAEiL,GAAItM,KAAKsM,GAAIE,GAAIxM,KAAKwM,IAAMxM,KAAKqB,MAChD,IAAI6K,EAAQlM,KAAKiE,MAAO5C,GASnC8J,QAAQrH,EAAM/D,GACV,MAAM+P,EAAM9P,KAAK4P,QAAQ,CACrBzD,OAAQ,OACRrI,KAAMA,IAEVgM,EAAIlQ,GAAG,UAAWG,GAClB+P,EAAIlQ,GAAG,SAAS6C,IACZzC,KAAKkJ,QAAQ,iBAAkBzG,MAQvCkI,SACI,MAAMmF,EAAM9P,KAAK4P,UACjBE,EAAIlQ,GAAG,OAAQI,KAAKgK,OAAOrD,KAAK3G,OAChC8P,EAAIlQ,GAAG,SAAS6C,IACZzC,KAAKkJ,QAAQ,iBAAkBzG,MAEnCzC,KAAK+P,QAAUD,KI5EhB,MAAME,UAAe1Q,EAAAA,QAQxBuJ,YAAY5E,EAAK5C,EAAO,IACpByH,QACI7E,GAAO,iBAAoBA,IAC3B5C,EAAO4C,EACPA,EAAM,MAENA,GACAA,EAAMgM,EAAShM,GACf5C,EAAKyK,SAAW7H,EAAIE,KACpB9C,EAAKgK,OAA0B,UAAjBpH,EAAI0L,UAAyC,QAAjB1L,EAAI0L,SAC9CtO,EAAKiK,KAAOrH,EAAIqH,KACZrH,EAAIJ,QACJxC,EAAKwC,MAAQI,EAAIJ,QAEhBxC,EAAK8C,OACV9C,EAAKyK,SAAWmE,EAAS5O,EAAK8C,MAAMA,MAExCqC,EAAsBxG,KAAMqB,GAC5BrB,KAAKqL,OACD,MAAQhK,EAAKgK,OACPhK,EAAKgK,OACe,oBAAboE,UAA4B,WAAaA,SAASE,SAC/DtO,EAAKyK,WAAazK,EAAKiK,OAEvBjK,EAAKiK,KAAOtL,KAAKqL,OAAS,MAAQ,MAEtCrL,KAAK8L,SACDzK,EAAKyK,WACoB,oBAAb2D,SAA2BA,SAAS3D,SAAW,aAC/D9L,KAAKsL,KACDjK,EAAKiK,OACoB,oBAAbmE,UAA4BA,SAASnE,KACvCmE,SAASnE,KACTtL,KAAKqL,OACD,MACA,MAClBrL,KAAKuP,WAAalO,EAAKkO,YAAc,CAAC,UAAW,aACjDvP,KAAKgJ,WAAa,GAClBhJ,KAAKkQ,YAAc,GACnBlQ,KAAKmQ,cAAgB,EACrBnQ,KAAKqB,KAAOyF,OAAO+I,OAAO,CACtBvM,KAAM,aACN8M,OAAO,EACPvD,iBAAiB,EACjBwD,SAAS,EACT7E,eAAgB,IAChB8E,iBAAiB,EACjBC,oBAAoB,EACpBC,kBAAmB,CACfC,UAAW,MAEfC,iBAAkB,GAClBC,qBAAqB,GACtBtP,GACHrB,KAAKqB,KAAKiC,KAAOtD,KAAKqB,KAAKiC,KAAKM,QAAQ,MAAO,IAAM,IACtB,iBAApB5D,KAAKqB,KAAKwC,QACjB7D,KAAKqB,KAAKwC,MAAQgI,EAAQ/M,OAAOkB,KAAKqB,KAAKwC,QAG/C7D,KAAK4Q,GAAK,KACV5Q,KAAK6Q,SAAW,KAChB7Q,KAAK8Q,aAAe,KACpB9Q,KAAK+Q,YAAc,KAEnB/Q,KAAKgR,iBAAmB,KACQ,mBAArBnR,mBACHG,KAAKqB,KAAKsP,qBAIV9Q,iBAAiB,gBAAgB,KACzBG,KAAKiR,YAELjR,KAAKiR,UAAUzQ,qBACfR,KAAKiR,UAAUxH,YAEpB,GAEe,cAAlBzJ,KAAK8L,WACL9L,KAAKkR,qBAAuB,KACxBlR,KAAK2J,QAAQ,oBAEjB9J,iBAAiB,UAAWG,KAAKkR,sBAAsB,KAG/DlR,KAAKuJ,OAST4H,gBAAgB7G,GACZ,MAAMzG,EA0bd,SAAetE,GACX,MAAM6R,EAAI,GACV,IAAK,IAAI/S,KAAKkB,EACNA,EAAIoD,eAAetE,KACnB+S,EAAE/S,GAAKkB,EAAIlB,IAGnB,OAAO+S,EAjcWC,CAAMrR,KAAKqB,KAAKwC,OAE9BA,EAAMyN,IPjFU,EOmFhBzN,EAAMoN,UAAY3G,EAEdtK,KAAK4Q,KACL/M,EAAM4H,IAAMzL,KAAK4Q,IACrB,MAAMvP,EAAOyF,OAAO+I,OAAO,GAAI7P,KAAKqB,KAAKqP,iBAAiBpG,GAAOtK,KAAKqB,KAAM,CACxEwC,MAAAA,EACAoF,OAAQjJ,KACR8L,SAAU9L,KAAK8L,SACfT,OAAQrL,KAAKqL,OACbC,KAAMtL,KAAKsL,OAEf,OAAO,IAAIiE,EAAWjF,GAAMjJ,GAOhCkI,OACI,IAAI0H,EACJ,GAAIjR,KAAKqB,KAAKiP,iBACVN,EAAOuB,wBACmC,IAA1CvR,KAAKuP,WAAW7L,QAAQ,aACxBuN,EAAY,gBAEX,IAAI,IAAMjR,KAAKuP,WAAWjR,OAK3B,YAHA0B,KAAK0G,cAAa,KACd1G,KAAKiB,aAAa,QAAS,6BAC5B,GAIHgQ,EAAYjR,KAAKuP,WAAW,GAEhCvP,KAAKgJ,WAAa,UAElB,IACIiI,EAAYjR,KAAKmR,gBAAgBF,GAErC,MAAOtN,GAGH,OAFA3D,KAAKuP,WAAWiC,aAChBxR,KAAKuJ,OAGT0H,EAAU1H,OACVvJ,KAAKyR,aAAaR,GAOtBQ,aAAaR,GACLjR,KAAKiR,WACLjR,KAAKiR,UAAUzQ,qBAGnBR,KAAKiR,UAAYA,EAEjBA,EACKrR,GAAG,QAASI,KAAK0R,QAAQ/K,KAAK3G,OAC9BJ,GAAG,SAAUI,KAAKmK,SAASxD,KAAK3G,OAChCJ,GAAG,QAASI,KAAKkJ,QAAQvC,KAAK3G,OAC9BJ,GAAG,SAAS,KACbI,KAAK2J,QAAQ,sBASrBgI,MAAMrH,GACF,IAAI2G,EAAYjR,KAAKmR,gBAAgB7G,GACjCsH,GAAS,EACb5B,EAAOuB,uBAAwB,EAC/B,MAAMM,EAAkB,KAChBD,IAEJX,EAAUrH,KAAK,CAAC,CAAExC,KAAM,OAAQtD,KAAM,WACtCmN,EAAU9Q,KAAK,UAAUgJ,IACrB,IAAIyI,EAEJ,GAAI,SAAWzI,EAAI/B,MAAQ,UAAY+B,EAAIrF,KAAM,CAG7C,GAFA9D,KAAK8R,WAAY,EACjB9R,KAAKiB,aAAa,YAAagQ,IAC1BA,EACD,OACJjB,EAAOuB,sBAAwB,cAAgBN,EAAU3G,KACzDtK,KAAKiR,UAAUzG,OAAM,KACboH,GAEA,WAAa5R,KAAKgJ,aAEtBwE,IACAxN,KAAKyR,aAAaR,GAClBA,EAAUrH,KAAK,CAAC,CAAExC,KAAM,aACxBpH,KAAKiB,aAAa,UAAWgQ,GAC7BA,EAAY,KACZjR,KAAK8R,WAAY,EACjB9R,KAAK+R,gBAGR,CACD,MAAMtP,EAAM,IAAI4G,MAAM,eAEtB5G,EAAIwO,UAAYA,EAAU3G,KAC1BtK,KAAKiB,aAAa,eAAgBwB,SAI9C,SAASuP,IACDJ,IAGJA,GAAS,EACTpE,IACAyD,EAAUxH,QACVwH,EAAY,MAGhB,MAAM5B,EAAU5M,IACZ,MAAMwP,EAAQ,IAAI5I,MAAM,gBAAkB5G,GAE1CwP,EAAMhB,UAAYA,EAAU3G,KAC5B0H,IACAhS,KAAKiB,aAAa,eAAgBgR,IAEtC,SAASC,IACL7C,EAAQ,oBAGZ,SAASH,IACLG,EAAQ,iBAGZ,SAAS8C,EAAUC,GACXnB,GAAamB,EAAG9H,OAAS2G,EAAU3G,MACnC0H,IAIR,MAAMxE,EAAU,KACZyD,EAAU1Q,eAAe,OAAQsR,GACjCZ,EAAU1Q,eAAe,QAAS8O,GAClC4B,EAAU1Q,eAAe,QAAS2R,GAClClS,KAAKI,IAAI,QAAS8O,GAClBlP,KAAKI,IAAI,YAAa+R,IAE1BlB,EAAU9Q,KAAK,OAAQ0R,GACvBZ,EAAU9Q,KAAK,QAASkP,GACxB4B,EAAU9Q,KAAK,QAAS+R,GACxBlS,KAAKG,KAAK,QAAS+O,GACnBlP,KAAKG,KAAK,YAAagS,GACvBlB,EAAU1H,OAOdQ,SAOI,GANA/J,KAAKgJ,WAAa,OAClBgH,EAAOuB,sBAAwB,cAAgBvR,KAAKiR,UAAU3G,KAC9DtK,KAAKiB,aAAa,QAClBjB,KAAK+R,QAGD,SAAW/R,KAAKgJ,YAChBhJ,KAAKqB,KAAKgP,SACVrQ,KAAKiR,UAAUzG,MAAO,CACtB,IAAInM,EAAI,EACR,MAAM4E,EAAIjD,KAAK6Q,SAASvS,OACxB,KAAOD,EAAI4E,EAAG5E,IACV2B,KAAK2R,MAAM3R,KAAK6Q,SAASxS,KASrC8L,SAASF,GACL,GAAI,YAAcjK,KAAKgJ,YACnB,SAAWhJ,KAAKgJ,YAChB,YAAchJ,KAAKgJ,WAInB,OAHAhJ,KAAKiB,aAAa,SAAUgJ,GAE5BjK,KAAKiB,aAAa,aACVgJ,EAAO7C,MACX,IAAK,OACDpH,KAAKqS,YAAYC,KAAKC,MAAMtI,EAAOnG,OACnC,MACJ,IAAK,OACD9D,KAAKwS,mBACLxS,KAAKyS,WAAW,QAChBzS,KAAKiB,aAAa,QAClBjB,KAAKiB,aAAa,QAClB,MACJ,IAAK,QACD,MAAMwB,EAAM,IAAI4G,MAAM,gBAEtB5G,EAAIiQ,KAAOzI,EAAOnG,KAClB9D,KAAKkJ,QAAQzG,GACb,MACJ,IAAK,UACDzC,KAAKiB,aAAa,OAAQgJ,EAAOnG,MACjC9D,KAAKiB,aAAa,UAAWgJ,EAAOnG,OAapDuO,YAAYvO,GACR9D,KAAKiB,aAAa,YAAa6C,GAC/B9D,KAAK4Q,GAAK9M,EAAK2H,IACfzL,KAAKiR,UAAUpN,MAAM4H,IAAM3H,EAAK2H,IAChCzL,KAAK6Q,SAAW7Q,KAAK2S,eAAe7O,EAAK+M,UACzC7Q,KAAK8Q,aAAehN,EAAKgN,aACzB9Q,KAAK+Q,YAAcjN,EAAKiN,YACxB/Q,KAAK+J,SAED,WAAa/J,KAAKgJ,YAEtBhJ,KAAKwS,mBAOTA,mBACIxS,KAAK4G,eAAe5G,KAAKgR,kBACzBhR,KAAKgR,iBAAmBhR,KAAK0G,cAAa,KACtC1G,KAAK2J,QAAQ,kBACd3J,KAAK8Q,aAAe9Q,KAAK+Q,aACxB/Q,KAAKqB,KAAK0N,WACV/O,KAAKgR,iBAAiB/B,QAQ9ByC,UACI1R,KAAKkQ,YAAYtP,OAAO,EAAGZ,KAAKmQ,eAIhCnQ,KAAKmQ,cAAgB,EACjB,IAAMnQ,KAAKkQ,YAAY5R,OACvB0B,KAAKiB,aAAa,SAGlBjB,KAAK+R,QAQbA,QACQ,WAAa/R,KAAKgJ,YAClBhJ,KAAKiR,UAAUlI,WACd/I,KAAK8R,WACN9R,KAAKkQ,YAAY5R,SACjB0B,KAAKiR,UAAUrH,KAAK5J,KAAKkQ,aAGzBlQ,KAAKmQ,cAAgBnQ,KAAKkQ,YAAY5R,OACtC0B,KAAKiB,aAAa,UAY1B6I,MAAMX,EAAKyJ,EAAS7S,GAEhB,OADAC,KAAKyS,WAAW,UAAWtJ,EAAKyJ,EAAS7S,GAClCC,KAEX4J,KAAKT,EAAKyJ,EAAS7S,GAEf,OADAC,KAAKyS,WAAW,UAAWtJ,EAAKyJ,EAAS7S,GAClCC,KAWXyS,WAAWrL,EAAMtD,EAAM8O,EAAS7S,GAS5B,GARI,mBAAsB+D,IACtB/D,EAAK+D,EACLA,OAAOuI,GAEP,mBAAsBuG,IACtB7S,EAAK6S,EACLA,EAAU,MAEV,YAAc5S,KAAKgJ,YAAc,WAAahJ,KAAKgJ,WACnD,QAEJ4J,EAAUA,GAAW,IACbC,UAAW,IAAUD,EAAQC,SACrC,MAAM5I,EAAS,CACX7C,KAAMA,EACNtD,KAAMA,EACN8O,QAASA,GAEb5S,KAAKiB,aAAa,eAAgBgJ,GAClCjK,KAAKkQ,YAAYhQ,KAAK+J,GAClBlK,GACAC,KAAKG,KAAK,QAASJ,GACvBC,KAAK+R,QAOTtI,QACI,MAAMA,EAAQ,KACVzJ,KAAK2J,QAAQ,gBACb3J,KAAKiR,UAAUxH,SAEbqJ,EAAkB,KACpB9S,KAAKI,IAAI,UAAW0S,GACpB9S,KAAKI,IAAI,eAAgB0S,GACzBrJ,KAEEsJ,EAAiB,KAEnB/S,KAAKG,KAAK,UAAW2S,GACrB9S,KAAKG,KAAK,eAAgB2S,IAqB9B,MAnBI,YAAc9S,KAAKgJ,YAAc,SAAWhJ,KAAKgJ,aACjDhJ,KAAKgJ,WAAa,UACdhJ,KAAKkQ,YAAY5R,OACjB0B,KAAKG,KAAK,SAAS,KACXH,KAAK8R,UACLiB,IAGAtJ,OAIHzJ,KAAK8R,UACViB,IAGAtJ,KAGDzJ,KAOXkJ,QAAQzG,GACJuN,EAAOuB,uBAAwB,EAC/BvR,KAAKiB,aAAa,QAASwB,GAC3BzC,KAAK2J,QAAQ,kBAAmBlH,GAOpCkH,QAAQqJ,EAAQ5J,GACR,YAAcpJ,KAAKgJ,YACnB,SAAWhJ,KAAKgJ,YAChB,YAAchJ,KAAKgJ,aAEnBhJ,KAAK4G,eAAe5G,KAAKgR,kBAEzBhR,KAAKiR,UAAUzQ,mBAAmB,SAElCR,KAAKiR,UAAUxH,QAEfzJ,KAAKiR,UAAUzQ,qBACoB,mBAAxBC,qBACPA,oBAAoB,UAAWT,KAAKkR,sBAAsB,GAG9DlR,KAAKgJ,WAAa,SAElBhJ,KAAK4Q,GAAK,KAEV5Q,KAAKiB,aAAa,QAAS+R,EAAQ5J,GAGnCpJ,KAAKkQ,YAAc,GACnBlQ,KAAKmQ,cAAgB,GAU7BwC,eAAe9B,GACX,MAAMoC,EAAmB,GACzB,IAAI5U,EAAI,EACR,MAAM6U,EAAIrC,EAASvS,OACnB,KAAOD,EAAI6U,EAAG7U,KACL2B,KAAKuP,WAAW7L,QAAQmN,EAASxS,KAClC4U,EAAiB/S,KAAK2Q,EAASxS,IAEvC,OAAO4U,GAGfjD,EAAOL,SPxgBiB,EQ5BAK,EAAOL,SAAxB,MCFDlI,EAA+C,mBAAhBpI,YAM/BkI,EAAWT,OAAOrH,UAAU8H,SAC5BF,EAAiC,mBAATC,MACT,oBAATA,MACoB,6BAAxBC,EAASC,KAAKF,MAChB6L,EAAiC,mBAATC,MACT,oBAATA,MACoB,6BAAxB7L,EAASC,KAAK4L,MAMf,SAASC,EAAS9T,GACrB,OAASkI,IAA0BlI,aAAeF,aAlBtCE,CAAAA,GACyB,mBAAvBF,YAAY8I,OACpB9I,YAAY8I,OAAO5I,GACnBA,EAAI6I,kBAAkB/I,YAeqC8I,CAAO5I,KACnE8H,GAAkB9H,aAAe+H,MACjC6L,GAAkB5T,aAAe6T,KAEnC,SAASE,EAAU/T,EAAKgU,GAC3B,IAAKhU,GAAsB,iBAARA,EACf,OAAO,EAEX,GAAIwB,MAAMyS,QAAQjU,GAAM,CACpB,IAAK,IAAIlB,EAAI,EAAG4E,EAAI1D,EAAIjB,OAAQD,EAAI4E,EAAG5E,IACnC,GAAIiV,EAAU/T,EAAIlB,IACd,OAAO,EAGf,OAAO,EAEX,GAAIgV,EAAS9T,GACT,OAAO,EAEX,GAAIA,EAAIgU,QACkB,mBAAfhU,EAAIgU,QACU,IAArBjT,UAAUhC,OACV,OAAOgV,EAAU/T,EAAIgU,UAAU,GAEnC,IAAK,MAAM/T,KAAOD,EACd,GAAIuH,OAAOrH,UAAUkD,eAAe6E,KAAKjI,EAAKC,IAAQ8T,EAAU/T,EAAIC,IAChE,OAAO,EAGf,OAAO,ECxCJ,SAASiU,EAAkBxJ,GAC9B,MAAMyJ,EAAU,GACVC,EAAa1J,EAAOnG,KACpB8P,EAAO3J,EAGb,OAFA2J,EAAK9P,KAAO+P,EAAmBF,EAAYD,GAC3CE,EAAKE,YAAcJ,EAAQpV,OACpB,CAAE2L,OAAQ2J,EAAMF,QAASA,GAEpC,SAASG,EAAmB/P,EAAM4P,GAC9B,IAAK5P,EACD,OAAOA,EACX,GAAIuP,EAASvP,GAAO,CAChB,MAAMiQ,EAAc,CAAEC,cAAc,EAAMhP,IAAK0O,EAAQpV,QAEvD,OADAoV,EAAQxT,KAAK4D,GACNiQ,EAEN,GAAIhT,MAAMyS,QAAQ1P,GAAO,CAC1B,MAAMmQ,EAAU,IAAIlT,MAAM+C,EAAKxF,QAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIyF,EAAKxF,OAAQD,IAC7B4V,EAAQ5V,GAAKwV,EAAmB/P,EAAKzF,GAAIqV,GAE7C,OAAOO,EAEN,GAAoB,iBAATnQ,KAAuBA,aAAgBsB,MAAO,CAC1D,MAAM6O,EAAU,GAChB,IAAK,MAAMzU,KAAOsE,EACVgD,OAAOrH,UAAUkD,eAAe6E,KAAK1D,EAAMtE,KAC3CyU,EAAQzU,GAAOqU,EAAmB/P,EAAKtE,GAAMkU,IAGrD,OAAOO,EAEX,OAAOnQ,EAUJ,SAASoQ,EAAkBjK,EAAQyJ,GAGtC,OAFAzJ,EAAOnG,KAAOqQ,EAAmBlK,EAAOnG,KAAM4P,GAC9CzJ,EAAO6J,iBAAczH,EACdpC,EAEX,SAASkK,EAAmBrQ,EAAM4P,GAC9B,IAAK5P,EACD,OAAOA,EACX,GAAIA,GAAQA,EAAKkQ,aACb,OAAON,EAAQ5P,EAAKkB,KAEnB,GAAIjE,MAAMyS,QAAQ1P,GACnB,IAAK,IAAIzF,EAAI,EAAGA,EAAIyF,EAAKxF,OAAQD,IAC7ByF,EAAKzF,GAAK8V,EAAmBrQ,EAAKzF,GAAIqV,QAGzC,GAAoB,iBAAT5P,EACZ,IAAK,MAAMtE,KAAOsE,EACVgD,OAAOrH,UAAUkD,eAAe6E,KAAK1D,EAAMtE,KAC3CsE,EAAKtE,GAAO2U,EAAmBrQ,EAAKtE,GAAMkU,IAItD,OAAO5P,ECjEJ,MAAM6L,EAAW,EACjB,IAAIyE,GACX,SAAWA,GACPA,EAAWA,EAAU,QAAc,GAAK,UACxCA,EAAWA,EAAU,WAAiB,GAAK,aAC3CA,EAAWA,EAAU,MAAY,GAAK,QACtCA,EAAWA,EAAU,IAAU,GAAK,MACpCA,EAAWA,EAAU,cAAoB,GAAK,gBAC9CA,EAAWA,EAAU,aAAmB,GAAK,eAC7CA,EAAWA,EAAU,WAAiB,GAAK,aAP/C,CAQGA,IAAeA,EAAa,KAIxB,MAAMC,EAOT7V,OAAOe,GACH,OAAIA,EAAI6H,OAASgN,EAAWE,OAAS/U,EAAI6H,OAASgN,EAAWG,MACrDjB,EAAU/T,GAQX,CAACS,KAAKwU,eAAejV,KAPpBA,EAAI6H,KACA7H,EAAI6H,OAASgN,EAAWE,MAClBF,EAAWK,aACXL,EAAWM,WACd1U,KAAK2U,eAAepV,IAQvCiV,eAAejV,GAEX,IAAImD,EAAM,GAAKnD,EAAI6H,KAmBnB,OAjBI7H,EAAI6H,OAASgN,EAAWK,cACxBlV,EAAI6H,OAASgN,EAAWM,aACxBhS,GAAOnD,EAAIuU,YAAc,KAIzBvU,EAAIqV,KAAO,MAAQrV,EAAIqV,MACvBlS,GAAOnD,EAAIqV,IAAM,KAGjB,MAAQrV,EAAIqR,KACZlO,GAAOnD,EAAIqR,IAGX,MAAQrR,EAAIuE,OACZpB,GAAO4P,KAAKuC,UAAUtV,EAAIuE,OAEvBpB,EAOXiS,eAAepV,GACX,MAAMuV,EAAiBrB,EAAkBlU,GACnCqU,EAAO5T,KAAKwU,eAAeM,EAAe7K,QAC1CyJ,EAAUoB,EAAepB,QAE/B,OADAA,EAAQqB,QAAQnB,GACTF,GAQR,MAAMsB,UAAgB1V,EAAAA,QACzBuJ,cACIC,QAOJmM,IAAI1V,GACA,IAAI0K,EACJ,GAAmB,iBAAR1K,EACP0K,EAASjK,KAAKkV,aAAa3V,GACvB0K,EAAO7C,OAASgN,EAAWK,cAC3BxK,EAAO7C,OAASgN,EAAWM,YAE3B1U,KAAKmV,cAAgB,IAAIC,GAAoBnL,GAElB,IAAvBA,EAAO6J,aACPhL,MAAM7H,aAAa,UAAWgJ,IAKlCnB,MAAM7H,aAAa,UAAWgJ,OAGjC,KAAIoJ,EAAS9T,KAAQA,EAAIX,OAe1B,MAAM,IAAIyK,MAAM,iBAAmB9J,GAbnC,IAAKS,KAAKmV,cACN,MAAM,IAAI9L,MAAM,oDAGhBY,EAASjK,KAAKmV,cAAcE,eAAe9V,GACvC0K,IAEAjK,KAAKmV,cAAgB,KACrBrM,MAAM7H,aAAa,UAAWgJ,KAc9CiL,aAAaxS,GACT,IAAIrE,EAAI,EAER,MAAMe,EAAI,CACNgI,KAAMuE,OAAOjJ,EAAI4C,OAAO,KAE5B,QAA2B+G,IAAvB+H,EAAWhV,EAAEgI,MACb,MAAM,IAAIiC,MAAM,uBAAyBjK,EAAEgI,MAG/C,GAAIhI,EAAEgI,OAASgN,EAAWK,cACtBrV,EAAEgI,OAASgN,EAAWM,WAAY,CAClC,MAAMY,EAAQjX,EAAI,EAClB,KAA2B,MAApBqE,EAAI4C,SAASjH,IAAcA,GAAKqE,EAAIpE,SAC3C,MAAMiX,EAAM7S,EAAI7D,UAAUyW,EAAOjX,GACjC,GAAIkX,GAAO5J,OAAO4J,IAA0B,MAAlB7S,EAAI4C,OAAOjH,GACjC,MAAM,IAAIgL,MAAM,uBAEpBjK,EAAE0U,YAAcnI,OAAO4J,GAG3B,GAAI,MAAQ7S,EAAI4C,OAAOjH,EAAI,GAAI,CAC3B,MAAMiX,EAAQjX,EAAI,EAClB,OAASA,GAED,MADMqE,EAAI4C,OAAOjH,IAGjBA,IAAMqE,EAAIpE,SAGlBc,EAAEwV,IAAMlS,EAAI7D,UAAUyW,EAAOjX,QAG7Be,EAAEwV,IAAM,IAGZ,MAAMY,EAAO9S,EAAI4C,OAAOjH,EAAI,GAC5B,GAAI,KAAOmX,GAAQ7J,OAAO6J,IAASA,EAAM,CACrC,MAAMF,EAAQjX,EAAI,EAClB,OAASA,GAAG,CACR,MAAMoX,EAAI/S,EAAI4C,OAAOjH,GACrB,GAAI,MAAQoX,GAAK9J,OAAO8J,IAAMA,EAAG,GAC3BpX,EACF,MAEJ,GAAIA,IAAMqE,EAAIpE,OACV,MAERc,EAAEwR,GAAKjF,OAAOjJ,EAAI7D,UAAUyW,EAAOjX,EAAI,IAG3C,GAAIqE,EAAI4C,SAASjH,GAAI,CACjB,MAAMqX,EAmClB,SAAkBhT,GACd,IACI,OAAO4P,KAAKC,MAAM7P,GAEtB,MAAOiB,GACH,OAAO,GAxCagS,CAASjT,EAAI6B,OAAOlG,IACpC,IAAI2W,EAAQY,eAAexW,EAAEgI,KAAMsO,GAI/B,MAAM,IAAIrM,MAAM,mBAHhBjK,EAAE0E,KAAO4R,EAMjB,OAAOtW,EAEU,sBAACgI,EAAMsO,GACxB,OAAQtO,GACJ,KAAKgN,EAAWyB,QACZ,MAA0B,iBAAZH,EAClB,KAAKtB,EAAW0B,WACZ,YAAmBzJ,IAAZqJ,EACX,KAAKtB,EAAW2B,cACZ,MAA0B,iBAAZL,GAA2C,iBAAZA,EACjD,KAAKtB,EAAWE,MAChB,KAAKF,EAAWK,aACZ,OAAO1T,MAAMyS,QAAQkC,IAAYA,EAAQpX,OAAS,EACtD,KAAK8V,EAAWG,IAChB,KAAKH,EAAWM,WACZ,OAAO3T,MAAMyS,QAAQkC,IAMjCM,UACQhW,KAAKmV,eACLnV,KAAKmV,cAAcc,0BAoB/B,MAAMb,GACFvM,YAAYoB,GACRjK,KAAKiK,OAASA,EACdjK,KAAK0T,QAAU,GACf1T,KAAKkW,UAAYjM,EAUrBoL,eAAec,GAEX,GADAnW,KAAK0T,QAAQxT,KAAKiW,GACdnW,KAAK0T,QAAQpV,SAAW0B,KAAKkW,UAAUpC,YAAa,CAEpD,MAAM7J,EAASiK,EAAkBlU,KAAKkW,UAAWlW,KAAK0T,SAEtD,OADA1T,KAAKiW,yBACEhM,EAEX,OAAO,KAKXgM,yBACIjW,KAAKkW,UAAY,KACjBlW,KAAK0T,QAAU,IC5QhB,SAAS9T,GAAGL,EAAK6P,EAAIrP,GAExB,OADAR,EAAIK,GAAGwP,EAAIrP,GACJ,WACHR,EAAIa,IAAIgP,EAAIrP,ICIpB,MAAMqW,GAAkBtP,OAAOuP,OAAO,CAClCC,QAAS,EACTC,cAAe,EACfC,WAAY,EACZC,cAAe,EAEfC,YAAa,EACbnW,eAAgB,IAEb,MAAMyP,WAAe1Q,EAAAA,QAMxBuJ,YAAY8N,EAAI/B,EAAKvT,GACjByH,QACA9I,KAAK4W,WAAY,EACjB5W,KAAK6W,cAAe,EACpB7W,KAAK8W,cAAgB,GACrB9W,KAAK+W,WAAa,GAClB/W,KAAKgX,IAAM,EACXhX,KAAKiX,KAAO,GACZjX,KAAKkX,MAAQ,GACblX,KAAK2W,GAAKA,EACV3W,KAAK4U,IAAMA,EACPvT,GAAQA,EAAK8V,OACbnX,KAAKmX,KAAO9V,EAAK8V,MAEjBnX,KAAK2W,GAAGS,cACRpX,KAAKuJ,OAOb8N,YACI,GAAIrX,KAAKsX,KACL,OACJ,MAAMX,EAAK3W,KAAK2W,GAChB3W,KAAKsX,KAAO,CACR1X,GAAG+W,EAAI,OAAQ3W,KAAK8O,OAAOnI,KAAK3G,OAChCJ,GAAG+W,EAAI,SAAU3W,KAAKuX,SAAS5Q,KAAK3G,OACpCJ,GAAG+W,EAAI,QAAS3W,KAAKqP,QAAQ1I,KAAK3G,OAClCJ,GAAG+W,EAAI,QAAS3W,KAAKkP,QAAQvI,KAAK3G,QAMtCwX,aACA,QAASxX,KAAKsX,KAOlBhB,UACI,OAAItW,KAAK4W,YAET5W,KAAKqX,YACArX,KAAK2W,GAAL,eACD3W,KAAK2W,GAAGpN,OACR,SAAWvJ,KAAK2W,GAAGc,aACnBzX,KAAK8O,UALE9O,KAWfuJ,OACI,OAAOvJ,KAAKsW,UAQhB1M,QAAQ9I,GAGJ,OAFAA,EAAKiU,QAAQ,WACb/U,KAAKa,KAAKR,MAAML,KAAMc,GACfd,KASXa,KAAKuO,KAAOtO,GACR,GAAIsV,GAAgBzT,eAAeyM,GAC/B,MAAM,IAAI/F,MAAM,IAAM+F,EAAK,8BAE/BtO,EAAKiU,QAAQ3F,GACb,MAAMnF,EAAS,CACX7C,KAAMgN,EAAWE,MACjBxQ,KAAMhD,EAEVmJ,QAAiB,IAGjB,GAFAA,EAAO2I,QAAQC,UAAmC,IAAxB7S,KAAKkX,MAAMrE,SAEjC,mBAAsB/R,EAAKA,EAAKxC,OAAS,GAAI,CAC7C,MAAMsS,EAAK5Q,KAAKgX,MACVU,EAAM5W,EAAK6W,MACjB3X,KAAK4X,qBAAqBhH,EAAI8G,GAC9BzN,EAAO2G,GAAKA,EAEhB,MAAMiH,EAAsB7X,KAAK2W,GAAGmB,QAChC9X,KAAK2W,GAAGmB,OAAO7G,WACfjR,KAAK2W,GAAGmB,OAAO7G,UAAUlI,SAW7B,OAVsB/I,KAAKkX,MAAMa,YAAcF,IAAwB7X,KAAK4W,aAGnE5W,KAAK4W,UACV5W,KAAKiK,OAAOA,GAGZjK,KAAK+W,WAAW7W,KAAK+J,IAEzBjK,KAAKkX,MAAQ,GACNlX,KAKX4X,qBAAqBhH,EAAI8G,GACrB,MAAM3K,EAAU/M,KAAKkX,MAAMnK,QAC3B,QAAgBV,IAAZU,EAEA,YADA/M,KAAKiX,KAAKrG,GAAM8G,GAIpB,MAAMM,EAAQhY,KAAK2W,GAAGjQ,cAAa,YACxB1G,KAAKiX,KAAKrG,GACjB,IAAK,IAAIvS,EAAI,EAAGA,EAAI2B,KAAK+W,WAAWzY,OAAQD,IACpC2B,KAAK+W,WAAW1Y,GAAGuS,KAAOA,GAC1B5Q,KAAK+W,WAAWnW,OAAOvC,EAAG,GAGlCqZ,EAAIlQ,KAAKxH,KAAM,IAAIqJ,MAAM,8BAC1B0D,GACH/M,KAAKiX,KAAKrG,GAAM,IAAI9P,KAEhBd,KAAK2W,GAAG/P,eAAeoR,GACvBN,EAAIrX,MAAML,KAAM,CAAC,QAASc,KASlCmJ,OAAOA,GACHA,EAAO2K,IAAM5U,KAAK4U,IAClB5U,KAAK2W,GAAGsB,QAAQhO,GAOpB6E,SAC4B,mBAAb9O,KAAKmX,KACZnX,KAAKmX,MAAMrT,IACP9D,KAAKiK,OAAO,CAAE7C,KAAMgN,EAAWyB,QAAS/R,KAAAA,OAI5C9D,KAAKiK,OAAO,CAAE7C,KAAMgN,EAAWyB,QAAS/R,KAAM9D,KAAKmX,OAS3D9H,QAAQ5M,GACCzC,KAAK4W,WACN5W,KAAKiB,aAAa,gBAAiBwB,GAS3CyM,QAAQ8D,GACJhT,KAAK4W,WAAY,EACjB5W,KAAK6W,cAAe,SACb7W,KAAK4Q,GACZ5Q,KAAKiB,aAAa,aAAc+R,GAQpCuE,SAAStN,GAEL,GADsBA,EAAO2K,MAAQ5U,KAAK4U,IAG1C,OAAQ3K,EAAO7C,MACX,KAAKgN,EAAWyB,QACZ,GAAI5L,EAAOnG,MAAQmG,EAAOnG,KAAK2H,IAAK,CAChC,MAAMmF,EAAK3G,EAAOnG,KAAK2H,IACvBzL,KAAKkY,UAAUtH,QAGf5Q,KAAKiB,aAAa,gBAAiB,IAAIoI,MAAM,8LAEjD,MACJ,KAAK+K,EAAWE,MAGhB,KAAKF,EAAWK,aACZzU,KAAKmY,QAAQlO,GACb,MACJ,KAAKmK,EAAWG,IAGhB,KAAKH,EAAWM,WACZ1U,KAAKoY,MAAMnO,GACX,MACJ,KAAKmK,EAAW0B,WACZ9V,KAAKqY,eACL,MACJ,KAAKjE,EAAW2B,cACZ/V,KAAKgW,UACL,MAAMvT,EAAM,IAAI4G,MAAMY,EAAOnG,KAAKwU,SAElC7V,EAAIqB,KAAOmG,EAAOnG,KAAKA,KACvB9D,KAAKiB,aAAa,gBAAiBwB,IAU/C0V,QAAQlO,GACJ,MAAMnJ,EAAOmJ,EAAOnG,MAAQ,GACxB,MAAQmG,EAAO2G,IACf9P,EAAKZ,KAAKF,KAAK0X,IAAIzN,EAAO2G,KAE1B5Q,KAAK4W,UACL5W,KAAKuY,UAAUzX,GAGfd,KAAK8W,cAAc5W,KAAK4G,OAAOuP,OAAOvV,IAG9CyX,UAAUzX,GACN,GAAId,KAAKwY,eAAiBxY,KAAKwY,cAAcla,OAAQ,CACjD,MAAM4C,EAAYlB,KAAKwY,cAAcxX,QACrC,IAAK,MAAMyX,KAAYvX,EACnBuX,EAASpY,MAAML,KAAMc,GAG7BgI,MAAMjI,KAAKR,MAAML,KAAMc,GAO3B4W,IAAI9G,GACA,MAAMrL,EAAOvF,KACb,IAAI0Y,GAAO,EACX,OAAO,YAAa5X,GAEZ4X,IAEJA,GAAO,EACPnT,EAAK0E,OAAO,CACR7C,KAAMgN,EAAWG,IACjB3D,GAAIA,EACJ9M,KAAMhD,MAUlBsX,MAAMnO,GACF,MAAMyN,EAAM1X,KAAKiX,KAAKhN,EAAO2G,IACzB,mBAAsB8G,IACtBA,EAAIrX,MAAML,KAAMiK,EAAOnG,aAChB9D,KAAKiX,KAAKhN,EAAO2G,KAUhCsH,UAAUtH,GACN5Q,KAAK4Q,GAAKA,EACV5Q,KAAK4W,WAAY,EACjB5W,KAAK6W,cAAe,EACpB7W,KAAK2Y,eACL3Y,KAAKiB,aAAa,WAOtB0X,eACI3Y,KAAK8W,cAAc5P,SAASpG,GAASd,KAAKuY,UAAUzX,KACpDd,KAAK8W,cAAgB,GACrB9W,KAAK+W,WAAW7P,SAAS+C,GAAWjK,KAAKiK,OAAOA,KAChDjK,KAAK+W,WAAa,GAOtBsB,eACIrY,KAAKgW,UACLhW,KAAKkP,QAAQ,wBASjB8G,UACQhW,KAAKsX,OAELtX,KAAKsX,KAAKpQ,SAAS0R,GAAeA,MAClC5Y,KAAKsX,UAAOjL,GAEhBrM,KAAK2W,GAAL,SAAoB3W,MAQxBwW,aAUI,OATIxW,KAAK4W,WACL5W,KAAKiK,OAAO,CAAE7C,KAAMgN,EAAW0B,aAGnC9V,KAAKgW,UACDhW,KAAK4W,WAEL5W,KAAKkP,QAAQ,wBAEVlP,KAQXyJ,QACI,OAAOzJ,KAAKwW,aAShB3D,SAASA,GAEL,OADA7S,KAAKkX,MAAMrE,SAAWA,EACf7S,KASP+X,eAEA,OADA/X,KAAKkX,MAAMa,UAAW,EACf/X,KAiBX+M,QAAQA,GAEJ,OADA/M,KAAKkX,MAAMnK,QAAUA,EACd/M,KASX6Y,MAAMJ,GAGF,OAFAzY,KAAKwY,cAAgBxY,KAAKwY,eAAiB,GAC3CxY,KAAKwY,cAActY,KAAKuY,GACjBzY,KASX8Y,WAAWL,GAGP,OAFAzY,KAAKwY,cAAgBxY,KAAKwY,eAAiB,GAC3CxY,KAAKwY,cAAczD,QAAQ0D,GACpBzY,KAQX+Y,OAAON,GACH,IAAKzY,KAAKwY,cACN,OAAOxY,KAEX,GAAIyY,EAAU,CACV,MAAMvX,EAAYlB,KAAKwY,cACvB,IAAK,IAAIna,EAAI,EAAGA,EAAI6C,EAAU5C,OAAQD,IAClC,GAAIoa,IAAavX,EAAU7C,GAEvB,OADA6C,EAAUN,OAAOvC,EAAG,GACb2B,UAKfA,KAAKwY,cAAgB,GAEzB,OAAOxY,KAQXgZ,eACI,OAAOhZ,KAAKwY,eAAiB,I,kDC5d9B,MAAMS,WAAgB3Z,EAAAA,QACzBuJ,YAAY5E,EAAK5C,GACb,IAAI6X,EACJpQ,QACA9I,KAAKmZ,KAAO,GACZnZ,KAAKsX,KAAO,GACRrT,GAAO,iBAAoBA,IAC3B5C,EAAO4C,EACPA,OAAMoI,IAEVhL,EAAOA,GAAQ,IACViC,KAAOjC,EAAKiC,MAAQ,aACzBtD,KAAKqB,KAAOA,EACZmF,EAAsBxG,KAAMqB,GAC5BrB,KAAKoZ,cAAmC,IAAtB/X,EAAK+X,cACvBpZ,KAAKqZ,qBAAqBhY,EAAKgY,sBAAwBC,EAAAA,GACvDtZ,KAAKuZ,kBAAkBlY,EAAKkY,mBAAqB,KACjDvZ,KAAKwZ,qBAAqBnY,EAAKmY,sBAAwB,KACvDxZ,KAAKyZ,oBAAwD,QAAnCP,EAAK7X,EAAKoY,2BAAwC,IAAPP,EAAgBA,EAAK,IAC1FlZ,KAAK0Z,QAAU,IAAItY,GAAQ,CACvBG,IAAKvB,KAAKuZ,oBACV/X,IAAKxB,KAAKwZ,uBACV9X,OAAQ1B,KAAKyZ,wBAEjBzZ,KAAK+M,QAAQ,MAAQ1L,EAAK0L,QAAU,IAAQ1L,EAAK0L,SACjD/M,KAAKyX,YAAc,SACnBzX,KAAKiE,IAAMA,EACX,MAAM0V,EAAUtY,EAAKuY,QAAUA,EAC/B5Z,KAAK6Z,QAAU,IAAIF,EAAQtF,QAC3BrU,KAAK8Z,QAAU,IAAIH,EAAQ3E,QAC3BhV,KAAKoX,cAAoC,IAArB/V,EAAK0Y,YACrB/Z,KAAKoX,cACLpX,KAAKuJ,OAEb6P,aAAaY,GACT,OAAK1Z,UAAUhC,QAEf0B,KAAKia,gBAAkBD,EAChBha,MAFIA,KAAKia,cAIpBZ,qBAAqBW,GACjB,YAAU3N,IAAN2N,EACOha,KAAKka,uBAChBla,KAAKka,sBAAwBF,EACtBha,MAEXuZ,kBAAkBS,GACd,IAAId,EACJ,YAAU7M,IAAN2N,EACOha,KAAKma,oBAChBna,KAAKma,mBAAqBH,EACF,QAAvBd,EAAKlZ,KAAK0Z,eAA4B,IAAPR,GAAyBA,EAAG7W,OAAO2X,GAC5Dha,MAEXyZ,oBAAoBO,GAChB,IAAId,EACJ,YAAU7M,IAAN2N,EACOha,KAAKoa,sBAChBpa,KAAKoa,qBAAuBJ,EACJ,QAAvBd,EAAKlZ,KAAK0Z,eAA4B,IAAPR,GAAyBA,EAAG3W,UAAUyX,GAC/Dha,MAEXwZ,qBAAqBQ,GACjB,IAAId,EACJ,YAAU7M,IAAN2N,EACOha,KAAKqa,uBAChBra,KAAKqa,sBAAwBL,EACL,QAAvBd,EAAKlZ,KAAK0Z,eAA4B,IAAPR,GAAyBA,EAAG5W,OAAO0X,GAC5Dha,MAEX+M,QAAQiN,GACJ,OAAK1Z,UAAUhC,QAEf0B,KAAKsa,SAAWN,EACTha,MAFIA,KAAKsa,SAUpBC,wBAESva,KAAKwa,eACNxa,KAAKia,eACqB,IAA1Bja,KAAK0Z,QAAQ/X,UAEb3B,KAAKya,YAUblR,KAAKxJ,GACD,IAAKC,KAAKyX,YAAY/T,QAAQ,QAC1B,OAAO1D,KACXA,KAAK8X,OAAS,IAAI4C,EAAO1a,KAAKiE,IAAKjE,KAAKqB,MACxC,MAAM4H,EAASjJ,KAAK8X,OACdvS,EAAOvF,KACbA,KAAKyX,YAAc,UACnBzX,KAAK2a,eAAgB,EAErB,MAAMC,EAAiBhb,GAAGqJ,EAAQ,QAAQ,WACtC1D,EAAKuJ,SACL/O,GAAMA,OAGJ8a,EAAWjb,GAAGqJ,EAAQ,SAAUxG,IAClC8C,EAAKiI,UACLjI,EAAKkS,YAAc,SACnBzX,KAAKiB,aAAa,QAASwB,GACvB1C,EACAA,EAAG0C,GAIH8C,EAAKgV,0BAGb,IAAI,IAAUva,KAAKsa,SAAU,CACzB,MAAMvN,EAAU/M,KAAKsa,SACL,IAAZvN,GACA6N,IAGJ,MAAM5C,EAAQhY,KAAK0G,cAAa,KAC5BkU,IACA3R,EAAOQ,QAEPR,EAAOpI,KAAK,QAAS,IAAIwI,MAAM,cAChC0D,GACC/M,KAAKqB,KAAK0N,WACViJ,EAAM/I,QAEVjP,KAAKsX,KAAKpX,MAAK,WACXqG,aAAayR,MAKrB,OAFAhY,KAAKsX,KAAKpX,KAAK0a,GACf5a,KAAKsX,KAAKpX,KAAK2a,GACR7a,KAQXsW,QAAQvW,GACJ,OAAOC,KAAKuJ,KAAKxJ,GAOrB+O,SAEI9O,KAAKwN,UAELxN,KAAKyX,YAAc,OACnBzX,KAAKiB,aAAa,QAElB,MAAMgI,EAASjJ,KAAK8X,OACpB9X,KAAKsX,KAAKpX,KAAKN,GAAGqJ,EAAQ,OAAQjJ,KAAK8a,OAAOnU,KAAK3G,OAAQJ,GAAGqJ,EAAQ,OAAQjJ,KAAK+a,OAAOpU,KAAK3G,OAAQJ,GAAGqJ,EAAQ,QAASjJ,KAAKqP,QAAQ1I,KAAK3G,OAAQJ,GAAGqJ,EAAQ,QAASjJ,KAAKkP,QAAQvI,KAAK3G,OAAQJ,GAAGI,KAAK8Z,QAAS,UAAW9Z,KAAKgb,UAAUrU,KAAK3G,QAOvP8a,SACI9a,KAAKiB,aAAa,QAOtB8Z,OAAOjX,GACH9D,KAAK8Z,QAAQ7E,IAAInR,GAOrBkX,UAAU/Q,GACNjK,KAAKiB,aAAa,SAAUgJ,GAOhCoF,QAAQ5M,GACJzC,KAAKiB,aAAa,QAASwB,GAQ/BwG,OAAO2L,EAAKvT,GACR,IAAI4H,EAASjJ,KAAKmZ,KAAKvE,GAKvB,OAJK3L,IACDA,EAAS,IAAI+G,GAAOhQ,KAAM4U,EAAKvT,GAC/BrB,KAAKmZ,KAAKvE,GAAO3L,GAEdA,EAQXgS,SAAShS,GACL,MAAMkQ,EAAOrS,OAAOG,KAAKjH,KAAKmZ,MAC9B,IAAK,MAAMvE,KAAOuE,EAEd,GADenZ,KAAKmZ,KAAKvE,GACd4C,OACP,OAGRxX,KAAKkb,SAQTjD,QAAQhO,GACJ,MAAMY,EAAiB7K,KAAK6Z,QAAQrb,OAAOyL,GAC3C,IAAK,IAAI5L,EAAI,EAAGA,EAAIwM,EAAevM,OAAQD,IACvC2B,KAAK8X,OAAOhO,MAAMe,EAAexM,GAAI4L,EAAO2I,SAQpDpF,UACIxN,KAAKsX,KAAKpQ,SAAS0R,GAAeA,MAClC5Y,KAAKsX,KAAKhZ,OAAS,EACnB0B,KAAK8Z,QAAQ9D,UAOjBkF,SACIlb,KAAK2a,eAAgB,EACrB3a,KAAKwa,eAAgB,EACrBxa,KAAKkP,QAAQ,gBACTlP,KAAK8X,QACL9X,KAAK8X,OAAOrO,QAOpB+M,aACI,OAAOxW,KAAKkb,SAOhBhM,QAAQ8D,GACJhT,KAAKwN,UACLxN,KAAK0Z,QAAQtX,QACbpC,KAAKyX,YAAc,SACnBzX,KAAKiB,aAAa,QAAS+R,GACvBhT,KAAKia,gBAAkBja,KAAK2a,eAC5B3a,KAAKya,YAQbA,YACI,GAAIza,KAAKwa,eAAiBxa,KAAK2a,cAC3B,OAAO3a,KACX,MAAMuF,EAAOvF,KACb,GAAIA,KAAK0Z,QAAQ/X,UAAY3B,KAAKka,sBAC9Bla,KAAK0Z,QAAQtX,QACbpC,KAAKiB,aAAa,oBAClBjB,KAAKwa,eAAgB,MAEpB,CACD,MAAMW,EAAQnb,KAAK0Z,QAAQ7X,WAC3B7B,KAAKwa,eAAgB,EACrB,MAAMxC,EAAQhY,KAAK0G,cAAa,KACxBnB,EAAKoV,gBAET3a,KAAKiB,aAAa,oBAAqBsE,EAAKmU,QAAQ/X,UAEhD4D,EAAKoV,eAETpV,EAAKgE,MAAM9G,IACHA,GACA8C,EAAKiV,eAAgB,EACrBjV,EAAKkV,YACLza,KAAKiB,aAAa,kBAAmBwB,IAGrC8C,EAAK6V,oBAGdD,GACCnb,KAAKqB,KAAK0N,WACViJ,EAAM/I,QAEVjP,KAAKsX,KAAKpX,MAAK,WACXqG,aAAayR,OASzBoD,cACI,MAAMC,EAAUrb,KAAK0Z,QAAQ/X,SAC7B3B,KAAKwa,eAAgB,EACrBxa,KAAK0Z,QAAQtX,QACbpC,KAAKiB,aAAa,YAAaoa,ICrVvC,MAAMC,GAAQ,GACd,SAASnd,GAAO8F,EAAK5C,GACE,iBAAR4C,IACP5C,EAAO4C,EACPA,OAAMoI,GAGV,MAAMkP,ECHH,SAAatX,EAAKX,EAAO,GAAIkY,GAChC,IAAIjc,EAAM0E,EAEVuX,EAAMA,GAA4B,oBAAb/L,UAA4BA,SAC7C,MAAQxL,IACRA,EAAMuX,EAAI7L,SAAW,KAAO6L,EAAIrX,MAEjB,iBAARF,IACH,MAAQA,EAAIqB,OAAO,KAEfrB,EADA,MAAQA,EAAIqB,OAAO,GACbkW,EAAI7L,SAAW1L,EAGfuX,EAAIrX,KAAOF,GAGpB,sBAAsBwX,KAAKxX,KAExBA,OADA,IAAuBuX,EACjBA,EAAI7L,SAAW,KAAO1L,EAGtB,WAAaA,GAI3B1E,EAAM0Q,EAAShM,IAGd1E,EAAI+L,OACD,cAAcmQ,KAAKlc,EAAIoQ,UACvBpQ,EAAI+L,KAAO,KAEN,eAAemQ,KAAKlc,EAAIoQ,YAC7BpQ,EAAI+L,KAAO,QAGnB/L,EAAI+D,KAAO/D,EAAI+D,MAAQ,IACvB,MACMa,GADkC,IAA3B5E,EAAI4E,KAAKT,QAAQ,KACV,IAAMnE,EAAI4E,KAAO,IAAM5E,EAAI4E,KAS/C,OAPA5E,EAAIqR,GAAKrR,EAAIoQ,SAAW,MAAQxL,EAAO,IAAM5E,EAAI+L,KAAOhI,EAExD/D,EAAImc,KACAnc,EAAIoQ,SACA,MACAxL,GACCqX,GAAOA,EAAIlQ,OAAS/L,EAAI+L,KAAO,GAAK,IAAM/L,EAAI+L,MAChD/L,ED5CQoc,CAAI1X,GADnB5C,EAAOA,GAAQ,IACciC,MAAQ,cAC/BY,EAASqX,EAAOrX,OAChB0M,EAAK2K,EAAO3K,GACZtN,EAAOiY,EAAOjY,KACdsY,EAAgBN,GAAM1K,IAAOtN,KAAQgY,GAAM1K,GAAN,KAK3C,IAAI+F,EAaJ,OAjBsBtV,EAAKwa,UACvBxa,EAAK,0BACL,IAAUA,EAAKya,WACfF,EAGAjF,EAAK,IAAIsC,GAAQ/U,EAAQ7C,IAGpBia,GAAM1K,KACP0K,GAAM1K,GAAM,IAAIqI,GAAQ/U,EAAQ7C,IAEpCsV,EAAK2E,GAAM1K,IAEX2K,EAAO1X,QAAUxC,EAAKwC,QACtBxC,EAAKwC,MAAQ0X,EAAO/W,UAEjBmS,EAAG1N,OAAOsS,EAAOjY,KAAMjC,GAIlCyF,OAAO+I,OAAO1R,GAAQ,CAClB8a,QADkB,GAElBjJ,OAFkB,GAGlB2G,GAAIxY,GACJmY,QAASnY","sources":["webpack://main/../src/index.ts","webpack://main/../../../node_modules/@socket.io/component-emitter/index.js","webpack://main/../../../node_modules/backo2/index.js","webpack://main/../../../node_modules/has-cors/index.js","webpack://main/../../../node_modules/parseqs/index.js","webpack://main/../../../node_modules/parseuri/index.js","webpack://main/../../../node_modules/yeast/index.js","webpack://main/../../../node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://main/../../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://main/../../../node_modules/engine.io-client/build/esm/util.js","webpack://main/../../../node_modules/engine.io-parser/build/esm/commons.js","webpack://main/../../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://main/../../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://main/../../../node_modules/engine.io-parser/build/esm/index.js","webpack://main/../../../node_modules/engine.io-client/build/esm/transport.js","webpack://main/../../../node_modules/engine.io-client/build/esm/transports/polling.js","webpack://main/../../../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://main/../../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://main/../../../node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://main/../../../node_modules/engine.io-client/build/esm/transports/index.js","webpack://main/../../../node_modules/engine.io-client/build/esm/socket.js","webpack://main/../../../node_modules/engine.io-client/build/esm/index.js","webpack://main/../../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/is-binary.js","webpack://main/../../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/binary.js","webpack://main/../../../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/index.js","webpack://main/../../../node_modules/socket.io-client/build/esm/on.js","webpack://main/../../../node_modules/socket.io-client/build/esm/socket.js","webpack://main/../../../node_modules/socket.io-client/build/esm/manager.js","webpack://main/../../../node_modules/socket.io-client/build/esm/index.js","webpack://main/../../../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":[null,"\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"@socket.io/base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["chars","lookup","Uint8Array","i","length","charCodeAt","encode","arraybuffer","bytes","len","base64","substring","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","p","ArrayBuffer","Emitter","obj","key","prototype","mixin","exports","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","Backoff","opts","ms","min","max","factor","jitter","attempts","module","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","XMLHttpRequest","err","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","split","l","pair","decodeURIComponent","re","parts","path","names","src","b","indexOf","e","replace","query","data","m","exec","uri","source","host","authority","ipv6uri","pathNames","substr","queryKey","$0","$1","$2","prev","alphabet","map","seed","num","encoded","yeast","now","Date","decoded","charAt","self","window","Function","xdomain","hasCORS","globalThis","concat","join","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","readAsDataURL","supportsBinary","isView","buffer","decodeBase64Packet","binaryType","mapBinary","encodedPacket","SEPARATOR","String","fromCharCode","Transport","constructor","super","writable","readyState","socket","onError","msg","desc","Error","description","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","decodePacket","onPacket","Polling","polling","name","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePacket","encodePayload","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","Request","method","async","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","onSuccess","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","transports","websocket","location","isSSL","protocol","request","assign","req","pollXhr","Socket","parseuri","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","o","clone","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","add","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","c","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","volatile","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}